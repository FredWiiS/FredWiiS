<channel version="3.4.2">
  <id>f1f8c046-bce6-4cfb-981d-bb1b96297b52</id>
  <nextMetaDataId>17</nextMetaDataId>
  <name>DeepLink-Envoi</name>
  <description>Ce channel sert a reformater les messages HL7 renvoyé à Deeplink.
les ADT et SIU uniquement.
On y  ajoute un code site et un code groupe 
Les codes examens sont traduits avec une AP Ide correspondance des code examens.

En fonction des sites les messages pourront être envoyé directement à Deeplink en SFTP ou passer par notre serveur de routage.
A finir  : Transformation des ADT avec ZFI ou ZBE en SIU </description>
  <enabled>true</enabled>
  <lastModified>
    <time>1715004808005</time>
    <timezone>Europe/Paris</timezone>
  </lastModified>
  <revision>10</revision>
  <sourceConnector version="3.4.2">
    <metaDataId>0</metaDataId>
    <name>sourceConnector</name>
    <properties class="com.mirth.connect.connectors.vm.VmReceiverProperties" version="3.4.2">
      <pluginProperties/>
      <sourceConnectorProperties version="3.4.2">
        <responseVariable>Postprocessor</responseVariable>
        <respondAfterProcessing>true</respondAfterProcessing>
        <processBatch>false</processBatch>
        <firstResponse>false</firstResponse>
        <processingThreads>1</processingThreads>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
        <queueBufferSize>1000</queueBufferSize>
      </sourceConnectorProperties>
    </properties>
    <transformer version="3.4.2">
      <steps>
        <step>
          <sequenceNumber>0</sequenceNumber>
          <name>study_type_code</name>
          <script>var mapping;

try {
	mapping = msg[&apos;STUDY&apos;][&apos;study_type_code&apos;]; 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;study_type_code&apos;, validate( mapping , &apos;&apos;, new Array()));</script>
          <type>Mapper</type>
          <data>
            <entry>
              <string>Variable</string>
              <string>study_type_code</string>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>msg[&apos;STUDY&apos;][&apos;study_type_code&apos;]</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
            <entry>
              <string>isGlobal</string>
              <string>channel</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>1</sequenceNumber>
          <name>deeplink_file_message_type_event</name>
          <script>var mapping;

try {
	mapping = msg[&apos;MSH&apos;][&apos;messageType&apos;]+&apos;_&apos;+msg[&apos;MSH&apos;][&apos;messageType_triggerEvent&apos;]; 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;deeplink_file_message_type_event&apos;, validate( mapping , &apos;&apos;, new Array()));</script>
          <type>Mapper</type>
          <data>
            <entry>
              <string>Variable</string>
              <string>deeplink_file_message_type_event</string>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>msg[&apos;MSH&apos;][&apos;messageType&apos;]+&apos;_&apos;+msg[&apos;MSH&apos;][&apos;messageType_triggerEvent&apos;]</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
            <entry>
              <string>isGlobal</string>
              <string>channel</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>2</sequenceNumber>
          <name>message_type</name>
          <script>var mapping;

try {
	mapping = msg[&apos;MSH&apos;][&apos;messageType&apos;]; 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;message_type&apos;, validate( mapping , &apos;&apos;, new Array()));</script>
          <type>Mapper</type>
          <data>
            <entry>
              <string>Variable</string>
              <string>message_type</string>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>msg[&apos;MSH&apos;][&apos;messageType&apos;]</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
            <entry>
              <string>isGlobal</string>
              <string>channel</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>3</sequenceNumber>
          <name>patient_id</name>
          <script>var mapping;

try {
	mapping = msg[&apos;PATIENT&apos;][&apos;bea_identifier&apos;]; 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;patient_id&apos;, validate( mapping , &apos;&apos;, new Array()));</script>
          <type>Mapper</type>
          <data>
            <entry>
              <string>Variable</string>
              <string>patient_id</string>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>msg[&apos;PATIENT&apos;][&apos;bea_identifier&apos;]</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
            <entry>
              <string>isGlobal</string>
              <string>channel</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>4</sequenceNumber>
          <name>mergePatientFromId</name>
          <script>var mapping;

try {
	mapping = msg[&apos;MERGE&apos;][&apos;PatientIdMerged&apos;]; 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;mergePatientFromId&apos;, validate( mapping , &apos;&apos;, new Array()));</script>
          <type>Mapper</type>
          <data>
            <entry>
              <string>Variable</string>
              <string>mergePatientFromId</string>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>msg[&apos;MERGE&apos;][&apos;PatientIdMerged&apos;]</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
            <entry>
              <string>isGlobal</string>
              <string>channel</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>5</sequenceNumber>
          <name>code_groupe</name>
          <script>var mapping;

try {
	mapping = $(&apos;CODE_GROUPE&apos;); 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;code_groupe&apos;, validate( mapping , &apos;&apos;, new Array()));</script>
          <type>Mapper</type>
          <data>
            <entry>
              <string>Variable</string>
              <string>code_groupe</string>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>$(&apos;CODE_GROUPE&apos;)</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
            <entry>
              <string>isGlobal</string>
              <string>channel</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>6</sequenceNumber>
          <name>code_site</name>
          <script>var mapping;

try {
	mapping = $(&apos;CODE_SITE&apos;); 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;code_site&apos;, validate( mapping , &apos;&apos;, new Array()));</script>
          <type>Mapper</type>
          <data>
            <entry>
              <string>Variable</string>
              <string>code_site</string>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>$(&apos;CODE_SITE&apos;)</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
            <entry>
              <string>isGlobal</string>
              <string>channel</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>7</sequenceNumber>
          <name>study_appointment_number</name>
          <script>var mapping;

try {
	mapping = msg[&apos;STUDY&apos;][&apos;appointment_number&apos;]; 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;study_appointment_number&apos;, validate( mapping , &apos;&apos;, new Array()));</script>
          <type>Mapper</type>
          <data>
            <entry>
              <string>Variable</string>
              <string>study_appointment_number</string>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>msg[&apos;STUDY&apos;][&apos;appointment_number&apos;]</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
            <entry>
              <string>isGlobal</string>
              <string>channel</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>8</sequenceNumber>
          <name>study_accession_number</name>
          <script>var mapping;

try {
	mapping = msg[&apos;STUDY&apos;][&apos;accession_number&apos;]; 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;study_accession_number&apos;, validate( mapping , &apos;&apos;, new Array()));</script>
          <type>Mapper</type>
          <data>
            <entry>
              <string>Variable</string>
              <string>study_accession_number</string>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>msg[&apos;STUDY&apos;][&apos;accession_number&apos;]</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
            <entry>
              <string>isGlobal</string>
              <string>channel</string>
            </entry>
          </data>
        </step>
      </steps>
      <inboundTemplate encoding="base64">ew0KICAiTVNIIiA6IHsNCiAgICAic2VuZGluZ0FwcGxpY2F0aW9uX25hbWVzcGFjZUlkIiA6ICJY
UExPUkUiLA0KICAgICJzZW5kaW5nRmFjaWxpdHlfbmFtZXNwYWNlSWQiIDogIlhQTE9SRSIsDQog
ICAgImRhdGVPclRpbWVPZk1lc3NhZ2VfdGltZU9mQW5FdmVudCIgOiAiMjAyMC0xMi0yOCAwNzo0
OTowMCIsDQogICAgIm1lc3NhZ2VUeXBlIiA6ICJTSVUiLA0KICAgICJtZXNzYWdlVHlwZV90cmln
Z2VyRXZlbnQiIDogIlMxMiIsDQogICAgIm1lc3NhZ2VDb250cm9sSWRfdmFsdWUiIDogIkExMDI3
MDU2ODUwMjA3NDg0MyIsDQogICAgImFjY2VwdEFja25vd2xlZGdtZW50VHlwZV92YWx1ZSIgOiAi
IiwNCiAgICAiYXBwbGljYXRpb25BY2tub3dsZWRnbWVudFR5cGVfdmFsdWUiIDogIiIsDQogICAg
InNlcXVlbmNlTnVtYmVyX3ZhbHVlIiA6IDAsDQogICAgImNvZGVHcm91cGUiIDogImRldXhyaXZl
cyIsCiAgICAiY29kZVNpdGUiIDogIjEiDQogIH0sDQogICJQQVRJRU5UIiA6IHsNCgkiYmVhX2lk
ZW50aWZpZXIiIDogbnVsbCwKICAgICJobDdfaWRlbnRpZmllciIgOiAiWEMwMDAwMDI3MTk1IiwN
CiAgICAiaGw3X2lkZW50aWZpZXJMaXN0IiA6IFsNCiAgICAgIHsNCiAgICAgICAgImlkIiA6ICJY
QzAwMDAwMjcxOTUiLA0KICAgICAgICAiYXNzaWduaW5nX2F1dGhvcml0eV9uYW1lc3BhY2VfaWQi
IDogIkVETCIsDQogICAgICAgICJ0eXBlX2NvZGVfaWQiIDogIlBJIg0KICAgICAgfQ0KICAgIF0s
DQogICAgImxhc3RfbmFtZSIgOiAiR1VZT04iLA0KICAgICJmaXJzdF9uYW1lIiA6ICJKRUFOIE1J
Q0hFTCIsDQogICAgImJpcnRoZGF0ZSIgOiAiMTk2NS0wMy0wOSIsDQogICAgInNleCIgOiAiTSIs
DQogICAgInN0cmVldF9hZGRyZXNzIiA6ICIzIFJVRSBUUlVHVUVUICIsDQogICAgImNpdHkiIDog
IlRPVUxPTiIsDQogICAgInN0YXRlIiA6ICIiLA0KICAgICJ6aXBfY29kZSIgOiAiODMwMDAiLA0K
ICAgICJwcml2YXRlX3Bob25lX251bWJlciIgOiAiIiwNCiAgICAiYnVzaW5lc3NfcGhvbmVfbnVt
YmVyIiA6ICIiLA0KICAgICJtYWlsIiA6ICIiDQogIH0sDQogICJNRVJHRSIgOiB7DQogICAgIlBh
dGllbnRJZE1lcmdlZCIgOiA2Nzg5LAogICAgIlBhdGllbnRJZGVudGlmaWVyTGlzdF9pZCIgOiAi
QzEwMDQ1OTUzOTMwIiwNCiAgICAiYXNzaWduaW5nX2F1dGhvcml0eV9uYW1lc3BhY2VfaWQiIDog
IkVETCIsDQogICAgInR5cGVfY29kZV9pZCIgOiAiUEkiDQogIH0sCiAgIlZJU0lUIiA6IHsNCiAg
ICAidmlzaXRfbnVtYmVyIiA6ICJBMTAyNzA1Njg1MDAiLA0KICAgICJleHBlY3RlZF9hZG1pdF9k
YXRldGltZSIgOiAiMjAyMC0xMi0yOCAwNzo0OTowMCINCiAgfSwNCiAgIklOU1VSQU5DRSIgOiB7
DQogICAgImluc3VyYW5jZV90eXBlIiA6ICJBTU8iLA0KICAgICJuaXIiIDogIjE2NTAzOTkzNDEw
ODIyNyIsDQogICAgImFtb19jb2RlX3JlZ2ltZV9jYWlzc2VfY2VudHJlIiA6IG51bGwsDQogICAg
ImFtb19kcm9pdF9kZWJ1dCIgOiBudWxsLA0KICAgICJhbW9fZHJvaXRfZmluIiA6IG51bGwNCiAg
fSwNCiAgIlJFRkVSUklOR19ET0NUT1IiIDogIiIsDQogICJTVFVEWSIgOgogICAgew0KICAgICAg
ImFwcG9pbnRtZW50X251bWJlciIgOiAiQTEwMjcwNTY4NTAwIiwNCiAgICAgICJhY2Nlc3Npb25f
bnVtYmVyIiA6ICJBMTAyNzA1Njg1MDAiLA0KICAgICAgImluc3RhbmNlX3VpZCIgOiAiQTEwMjcw
NTY4NTAwXzAiLA0KICAgICAgImxvY2F0aW9uX2NvZGUiIDogIlJBRFVSQyIsDQogICAgICAibG9j
YXRpb25fbGFiZWwiIDogIlJBRElPIFVSR0VOQ0VTIENFRFJFUyIsDQogICAgICAibG9jYXRpb25f
dHlwZV9jb2RlIiA6ICJOT1RfVVNFRCIsDQogICAgICAibG9jYXRpb25fdGlja2V0X21lc3NhZ2Ui
IDogbnVsbCwNCiAgICAgICJsb2NhdGlvbl9wYXBlcl9tZXNzYWdlIiA6IG51bGwsDQogICAgICAi
c3R1ZHlfc3RhdHVzX2NvZGUiIDogIlNDSEVEVUxFRCIsDQogICAgICAic3R1ZHlfdHlwZV9jb2Rl
IiA6ICJSQURVUkNfUlBPVU0iLA0KICAgICAgInNoaWZ0X2NvZGUiIDogIlJBRFVSQyIsDQogICAg
ICAic3R1ZHlfYWx0ZXJuYXRpdmVfdHlwZV9jb2RlIiA6IG51bGwsDQogICAgICAic3R1ZHlfdHlw
ZV90ZXh0IiA6ICJQT1VNT05TIDEwIiwNCiAgICAgICJzY2hlZHVsZWRfZGF0ZXRpbWUiIDogIjIw
MjAtMTItMjggMTA6MTA6MDAiLA0KICAgICAgIm1vZGFsaXR5X2NvZGUiIDogIlJBIiwNCiAgICAg
ICJtb2RhbGl0eV90ZXh0IiA6ICJSQURJTyBUSE9SQUNJUVVFIC8gQVNQIiwNCiAgICAgICJvcmln
aW4iIDogIkdFUkkiLA0KICAgICAgImR1cmF0aW9uIiA6ICIyMCIsDQogICAgICAicHJlc2NyaWJp
bmdfZG9jdG9yIiA6IHsNCiAgICAgICAgInJwcHNfbnVtYmVyIiA6ICIxOTUwMSIsDQogICAgICAg
ICJsYXN0X25hbWUiIDogIkxBUEVSVE9UIiwNCiAgICAgICAgImZpcnN0X25hbWUiIDogIk1BUlRJ
TkUiDQogICAgICB9DQogICAgfQ0sDQogICJET0NVTUVOVFMiIDogWyBdCn0=</inboundTemplate>
      <outboundTemplate encoding="base64"></outboundTemplate>
      <inboundDataType>JSON</inboundDataType>
      <outboundDataType>JSON</outboundDataType>
      <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
        <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
          <splitType>JavaScript</splitType>
          <batchScript></batchScript>
        </batchProperties>
      </inboundProperties>
      <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
        <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
          <splitType>JavaScript</splitType>
          <batchScript></batchScript>
        </batchProperties>
      </outboundProperties>
    </transformer>
    <filter version="3.4.2">
      <rules/>
    </filter>
    <transportName>Channel Reader</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <waitForPrevious>true</waitForPrevious>
  </sourceConnector>
  <destinationConnectors>
    <connector version="3.4.2">
      <metaDataId>13</metaDataId>
      <name>Get Auth Token</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.4.2">
        <pluginProperties/>
        <destinationConnectorProperties version="3.4.2">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
        </destinationConnectorProperties>
        <host>http://localhost/userd/login</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map"/>
        <parameters class="linked-hash-map"/>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>{
	&quot;login&quot;: &quot;admin&quot;,
	&quot;password&quot;: &quot;admin&quot;
}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="3.4.2">
        <steps/>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.4.2">
        <steps>
          <step>
            <sequenceNumber>0</sequenceNumber>
            <name>accessToken</name>
            <script>var mapping;

try {
	mapping = msg[&apos;token&apos;]; 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;accessToken&apos;, validate( mapping , &apos;&apos;, new Array()));</script>
            <type>Mapper</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>accessToken</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;token&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
              <entry>
                <string>isGlobal</string>
                <string>channel</string>
              </entry>
            </data>
          </step>
        </steps>
        <inboundTemplate encoding="base64">ewogICAgInN1Y2Nlc3MiOiB0cnVlLAogICAgImVyciI6IG51bGwsCiAgICAidG9rZW4iOiAiIgp9
</inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.4.2">
        <rules/>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.4.2">
      <metaDataId>3</metaDataId>
      <name>Creation ADT A08 - Infos Patient Standard Deeplink</name>
      <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.4.2">
        <pluginProperties/>
        <destinationConnectorProperties version="3.4.2">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
        </destinationConnectorProperties>
        <script>/* on cree un ADT08 chaque fois que l&apos;on trouve dans le JSON un message sans informations STUDIES et pas de segment MRG */
// logger.info(connectorMessage.getEncodedData().toString())

var message_to_send = connectorMessage.getEncodedData().toString()
channelMap.put(&apos;message_to_send&apos;, message_to_send)</script>
      </properties>
      <transformer version="3.4.2">
        <steps>
          <step>
            <sequenceNumber>0</sequenceNumber>
            <name>MSH-3.1=&gt; CODE_GROUPE</name>
            <script>tmp[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.1&apos;] = validate($(&apos;code_groupe&apos;), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>$(&apos;code_groupe&apos;)</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>1</sequenceNumber>
            <name>MSH-4.1=&gt; CODE_SITE</name>
            <script>tmp[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;] = validate($(&apos;code_site&apos;), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>$(&apos;code_site&apos;)</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>2</sequenceNumber>
            <name>MSH.5.1  --&gt; DEEPLINK</name>
            <script>tmp[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.1&apos;] = validate(&apos;DEEPLINK&apos;, &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>&apos;DEEPLINK&apos;</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>3</sequenceNumber>
            <name>MSH.6.1  --&gt; code contrat deepllink</name>
            <script>tmp[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.1&apos;] = validate(globalMap.get(&apos;DEEPLINK_SITE_ID&apos;), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>globalMap.get(&apos;DEEPLINK_SITE_ID&apos;)</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>4</sequenceNumber>
            <name>MSH-7.1 =&gt; Date message</name>
            <script>tmp[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;] = validate(DateUtil.getCurrentDate(&quot;yyyyMMddHHmmss&quot;), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>DateUtil.getCurrentDate(&quot;yyyyMMddHHmmss&quot;)</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>5</sequenceNumber>
            <name>MSH-10-1 =&gt; Controle ID</name>
            <script>tmp[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;] = validate(msg[&apos;MSH&apos;][&apos;messageControlId_value&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;MSH&apos;][&apos;messageControlId_value&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>6</sequenceNumber>
            <name>ID patient BEA </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.2&apos;][&apos;PID.2.1&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;bea_identifier&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.2&apos;][&apos;PID.2.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;bea_identifier&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>7</sequenceNumber>
            <name>Patient Identifier List - ID (PID.3.1) </name>
            <script>for (var i = 0; i &lt; msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;].length; i++) {
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][i][&apos;PID.3.1&apos;] = msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;][i][&apos;id&apos;];
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][i][&apos;PID.3.4&apos;] = msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;][i][&apos;assigning_authority_namespace_id&apos;];
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][i][&apos;PID.3.5&apos;] = msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;][i][&apos;type_code_id&apos;];
}

/* ne marche pas 
const beaIdentifier = {
    &quot;PID.3.1&quot;: msg[&apos;PATIENT&apos;][&apos;bea_identifier&apos;],
    &quot;PID.3.4&quot;: &apos;BEA&apos;,
    &quot;PID.3.5&quot;: &apos;PI&apos;
}

tmp[&apos;PID&apos;][&apos;PID.3&apos;].unshift(beaIdentifier)

 */

 
/*  ajout de l&apos;ID BEA  pour dEEPLINK  en première position */
/*
tmp[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;] = msg[&apos;PATIENT&apos;][&apos;bea_identifier&apos;];
tmp[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.4&apos;] = &apos;BEA&apos;
tmp[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.5&apos;] = &apos;PI&apos;
*/</script>
            <type>JavaScript</type>
            <data>
              <entry>
                <string>Script</string>
                <string>for (var i = 0; i &lt; msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;].length; i++) {
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][i][&apos;PID.3.1&apos;] = msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;][i][&apos;id&apos;];
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][i][&apos;PID.3.4&apos;] = msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;][i][&apos;assigning_authority_namespace_id&apos;];
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][i][&apos;PID.3.5&apos;] = msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;][i][&apos;type_code_id&apos;];
}

/* ne marche pas 
const beaIdentifier = {
    &quot;PID.3.1&quot;: msg[&apos;PATIENT&apos;][&apos;bea_identifier&apos;],
    &quot;PID.3.4&quot;: &apos;BEA&apos;,
    &quot;PID.3.5&quot;: &apos;PI&apos;
}

tmp[&apos;PID&apos;][&apos;PID.3&apos;].unshift(beaIdentifier)

 */

 
/*  ajout de l&apos;ID BEA  pour dEEPLINK  en première position */
/*
tmp[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;] = msg[&apos;PATIENT&apos;][&apos;bea_identifier&apos;];
tmp[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.4&apos;] = &apos;BEA&apos;
tmp[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.5&apos;] = &apos;PI&apos;
*/</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>8</sequenceNumber>
            <name>Patient Name - Family Last Name (PID.5.1) </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.1&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;last_name&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;last_name&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>9</sequenceNumber>
            <name>Patient Name - Given Name (PID.5.2) </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.2&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;first_name&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.2&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;first_name&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>10</sequenceNumber>
            <name>Patient  Date/Time of Birth - Time of An Event (PID.7.1)  </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;] = validate(DateUtil.convertDate( &apos;yyyy-MM-dd&apos;, &apos;yyyyMMdd&apos;, msg[&apos;PATIENT&apos;][&apos;birthdate&apos;]), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>DateUtil.convertDate( &apos;yyyy-MM-dd&apos;, &apos;yyyyMMdd&apos;, msg[&apos;PATIENT&apos;][&apos;birthdate&apos;])</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>11</sequenceNumber>
            <name>Patient Sex - Value (PID.8.1)  </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.8&apos;][&apos;PID.8.1&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;sex&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.8&apos;][&apos;PID.8.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;sex&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>12</sequenceNumber>
            <name>Patient  Street Address (PID.11.1) </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.1&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;street_address&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;street_address&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>13</sequenceNumber>
            <name>Patient  City (PID.11.3) </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.3&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;city&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.3&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;city&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>14</sequenceNumber>
            <name>Patient  State or Province (PID.11.4)  </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.4&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;state&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.4&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;state&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>15</sequenceNumber>
            <name>Patient_zip_code (PID.11.5)</name>
            <script>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.5&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;zip_code&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.5&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;zip_code&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>16</sequenceNumber>
            <name>Patient  Phone Number - Home   (PID.13.1)</name>
            <script>tmp[&apos;PID&apos;][&apos;PID.13&apos;][&apos;PID.13.1&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;private_phone_number&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.13&apos;][&apos;PID.13.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;private_phone_number&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>17</sequenceNumber>
            <name>Patient  Phone Number - Business - (PID.14.1)</name>
            <script>tmp[&apos;PID&apos;][&apos;PID.14&apos;][&apos;PID.14.1&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;business_phone_number&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.14&apos;][&apos;PID.14.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;business_phone_number&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>18</sequenceNumber>
            <name>Patient Mail (&apos;PID.13.4)</name>
            <script>tmp[&apos;PID&apos;][&apos;PID.13&apos;][&apos;PID.13.4&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;mail&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.13&apos;][&apos;PID.13.4&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;mail&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>19</sequenceNumber>
            <name>Patient  NIR number (PID.19.1)</name>
            <script>tmp[&apos;PID&apos;][&apos;PID.19&apos;][&apos;PID.19.1&apos;] = validate(msg[&apos;INSURANCE&apos;][&apos;nir&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.19&apos;][&apos;PID.19.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;INSURANCE&apos;][&apos;nir&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
        </steps>
        <inboundTemplate encoding="base64">ew0KICAiTVNIIiA6IHsNCiAgICAic2VuZGluZ0FwcGxpY2F0aW9uX25hbWVzcGFjZUlkIiA6ICJY
UExPUkUiLA0KICAgICJzZW5kaW5nRmFjaWxpdHlfbmFtZXNwYWNlSWQiIDogIlhQTE9SRSIsDQog
ICAgImRhdGVPclRpbWVPZk1lc3NhZ2VfdGltZU9mQW5FdmVudCIgOiAiMjAyMC0xMi0yOCAwNzo0
OTowMCIsDQogICAgIm1lc3NhZ2VUeXBlIiA6ICJTSVUiLA0KICAgICJtZXNzYWdlVHlwZV90cmln
Z2VyRXZlbnQiIDogIlMxMiIsDQogICAgIm1lc3NhZ2VDb250cm9sSWRfdmFsdWUiIDogIkExMDI3
MDU2ODUwMjA3NDg0MyIsDQogICAgImFjY2VwdEFja25vd2xlZGdtZW50VHlwZV92YWx1ZSIgOiAi
IiwNCiAgICAiYXBwbGljYXRpb25BY2tub3dsZWRnbWVudFR5cGVfdmFsdWUiIDogIiIsDQogICAg
InNlcXVlbmNlTnVtYmVyX3ZhbHVlIiA6IDAsDQogICAgImNvZGVTaXRlIiA6ICJDRUQiDQogIH0s
DQogICJQQVRJRU5UIiA6IHsNCiAgICAiYmVhX2lkZW50aWZpZXIiIDogIjEiLAogICAgImhsN19p
ZGVudGlmaWVyIiA6ICJYQzAwMDAwMjcxOTUiLA0KICAgICJobDdfaWRlbnRpZmllckxpc3QiIDog
Ww0KICAgICAgew0KICAgICAgICAiaWQiIDogIlhDMDAwMDAyNzE5NSIsDQogICAgICAgICJhc3Np
Z25pbmdfYXV0aG9yaXR5X25hbWVzcGFjZV9pZCIgOiAiRURMIiwNCiAgICAgICAgInR5cGVfY29k
ZV9pZCIgOiAiUEkiDQogICAgICB9DQogICAgXSwNCiAgICAibGFzdF9uYW1lIiA6ICJHVVlPTiIs
DQogICAgImZpcnN0X25hbWUiIDogIkpFQU4gTUlDSEVMIiwNCiAgICAiYmlydGhkYXRlIiA6ICIx
OTY1LTAzLTA5IiwNCiAgICAic2V4IiA6ICJNIiwNCiAgICAic3RyZWV0X2FkZHJlc3MiIDogIjMg
UlVFIFRSVUdVRVQgIiwNCiAgICAiY2l0eSIgOiAiVE9VTE9OIiwNCiAgICAic3RhdGUiIDogIiIs
DQogICAgInppcF9jb2RlIiA6ICI4MzAwMCIsDQogICAgInByaXZhdGVfcGhvbmVfbnVtYmVyIiA6
ICIiLA0KICAgICJidXNpbmVzc19waG9uZV9udW1iZXIiIDogIiIsDQogICAgIm1haWwiIDogIiIN
CiAgfSwNCiAgIk1FUkdFIiA6ICIiLA0KICAiVklTSVQiIDogew0KICAgICJ2aXNpdF9udW1iZXIi
IDogIkExMDI3MDU2ODUwMCIsDQogICAgImV4cGVjdGVkX2FkbWl0X2RhdGV0aW1lIiA6ICIyMDIw
LTEyLTI4IDA3OjQ5OjAwIg0KICB9LA0KICAiSU5TVVJBTkNFIiA6IHsNCiAgICAiaW5zdXJhbmNl
X3R5cGUiIDogIkFNTyIsDQogICAgIm5pciIgOiAiMTY1MDM5OTM0MTA4MjI3IiwNCiAgICAiYW1v
X2NvZGVfcmVnaW1lX2NhaXNzZV9jZW50cmUiIDogbnVsbCwNCiAgICAiYW1vX2Ryb2l0X2RlYnV0
IiA6IG51bGwsDQogICAgImFtb19kcm9pdF9maW4iIDogbnVsbA0KICB9LA0KICAiUkVGRVJSSU5H
X0RPQ1RPUiIgOiAiIiwNCiAgIlNUVURZIiA6IAogICAgew0KICAgICAgImFwcG9pbnRtZW50X251
bWJlciIgOiAiQTEwMjcwNTY4NTAwIiwNCiAgICAgICJhY2Nlc3Npb25fbnVtYmVyIiA6ICJBMTAy
NzA1Njg1MDAiLA0KICAgICAgImluc3RhbmNlX3VpZCIgOiAiQTEwMjcwNTY4NTAwXzAiLA0KICAg
ICAgImxvY2F0aW9uX2NvZGUiIDogIlJBRFVSQyIsDQogICAgICAibG9jYXRpb25fbGFiZWwiIDog
IlJBRElPIFVSR0VOQ0VTIENFRFJFUyIsDQogICAgICAibG9jYXRpb25fdHlwZV9jb2RlIiA6ICJO
T1RfVVNFRCIsDQogICAgICAibG9jYXRpb25fdGlja2V0X21lc3NhZ2UiIDogbnVsbCwNCiAgICAg
ICJsb2NhdGlvbl9wYXBlcl9tZXNzYWdlIiA6IG51bGwsDQogICAgICAic3R1ZHlfc3RhdHVzX2Nv
ZGUiIDogIlNDSEVEVUxFRCIsDQogICAgICAic3R1ZHlfdHlwZV9jb2RlIiA6ICJSQURVUkNfUlBP
VU0iLA0KICAgICAgInNoaWZ0X2NvZGUiIDogIlJBRFVSQyIsDQogICAgICAic3R1ZHlfYWx0ZXJu
YXRpdmVfdHlwZV9jb2RlIiA6IG51bGwsDQogICAgICAic3R1ZHlfdHlwZV90ZXh0IiA6ICJQT1VN
T05TIDEwIiwNCiAgICAgICJzY2hlZHVsZWRfZGF0ZXRpbWUiIDogIjIwMjAtMTItMjggMTA6MTA6
MDAiLA0KICAgICAgIm1vZGFsaXR5X2NvZGUiIDogIlJBIiwNCiAgICAgICJtb2RhbGl0eV90ZXh0
IiA6ICJSQURJTyBUSE9SQUNJUVVFIC8gQVNQIiwNCiAgICAgICJvcmlnaW4iIDogIkdFUkkiLA0K
ICAgICAgImR1cmF0aW9uIiA6ICIyMCIsDQogICAgICAicHJlc2NyaWJpbmdfZG9jdG9yIiA6IHsN
CiAgICAgICAgInJwcHNfbnVtYmVyIiA6ICIxOTUwMSIsDQogICAgICAgICJsYXN0X25hbWUiIDog
IkxBUEVSVE9UIiwNCiAgICAgICAgImZpcnN0X25hbWUiIDogIk1BUlRJTkUiDQogICAgICB9DQog
ICAgfQ0sDQogICJET0NVTUVOVFMiIDogWyBdCn0=</inboundTemplate>
        <outboundTemplate encoding="base64">TVNIfF5+XCZ8fHx8fHx8QURUXkEwOHwzfFB8Mi4zLjF8fHx8fHxVVEYtOHxGUnwNUElEfHx8fHxe
Xl5eXkx8fHx8fHxeXl58fF5eXnx8fHx8fA0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>HL7V2</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r\n</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r\n</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.4.2">
        <steps/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.4.2">
        <rules>
          <rule>
            <sequenceNumber>0</sequenceNumber>
            <name>Accept message if &quot;msg[&apos;MSH&apos;][&apos;messageType&apos;]&quot; equals &apos;ADT&apos;</name>
            <data>
              <entry>
                <string>Field</string>
                <string>msg[&apos;MSH&apos;][&apos;messageType&apos;]</string>
              </entry>
              <entry>
                <string>Name</string>
                <string></string>
              </entry>
              <entry>
                <string>OriginalField</string>
                <string></string>
              </entry>
              <entry>
                <string>Equals</string>
                <string>1</string>
              </entry>
              <entry>
                <string>Values</string>
                <list>
                  <string>&apos;ADT&apos;</string>
                </list>
              </entry>
            </data>
            <type>Rule Builder</type>
            <script>if(msg[&apos;MSH&apos;][&apos;messageType&apos;] == &apos;ADT&apos;) {
	return true;
}
return false;</script>
            <operator>NONE</operator>
          </rule>
          <rule>
            <sequenceNumber>1</sequenceNumber>
            <name>Accept message if &quot;msg[&apos;MSH&apos;][&apos;messageType_triggerEvent&apos;]&quot; does not equal &apos;A40&apos;</name>
            <data>
              <entry>
                <string>Field</string>
                <string>msg[&apos;MSH&apos;][&apos;messageType_triggerEvent&apos;]</string>
              </entry>
              <entry>
                <string>Name</string>
                <string></string>
              </entry>
              <entry>
                <string>OriginalField</string>
                <string></string>
              </entry>
              <entry>
                <string>Equals</string>
                <string>0</string>
              </entry>
              <entry>
                <string>Values</string>
                <list>
                  <string>&apos;A40&apos;</string>
                </list>
              </entry>
            </data>
            <type>Rule Builder</type>
            <script>if(msg[&apos;MSH&apos;][&apos;messageType_triggerEvent&apos;] != &apos;A40&apos;) {
	return true;
}
return false;</script>
            <operator>AND</operator>
          </rule>
        </rules>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.4.2">
      <metaDataId>9</metaDataId>
      <name>Creation ADT40 - Merge Patient Standard Deeplink</name>
      <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.4.2">
        <pluginProperties/>
        <destinationConnectorProperties version="3.4.2">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
        </destinationConnectorProperties>
        <script>/* on cree un ADT40 chaque fois que l&apos;on trouve dans le JSON un message qui sonctien un segment MRG */
// logger.info(connectorMessage.getEncodedData().toString())

var message_to_send = connectorMessage.getEncodedData().toString()
channelMap.put(&apos;message_to_send&apos;, message_to_send)</script>
      </properties>
      <transformer version="3.4.2">
        <steps>
          <step>
            <sequenceNumber>0</sequenceNumber>
            <name>MSH-3.1 =&gt; CODE_GROUPE</name>
            <script>tmp[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.1&apos;] = validate($(&apos;code_groupe&apos;), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>$(&apos;code_groupe&apos;)</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>1</sequenceNumber>
            <name>MSH-4.1 =&gt; CODE_SITE</name>
            <script>tmp[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;] = validate($(&apos;code_site&apos;), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>$(&apos;code_site&apos;)</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>2</sequenceNumber>
            <name>MSH.5.1  --&gt; Deeplink</name>
            <script>tmp[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.1&apos;] = validate(&apos;DEEPLINK&apos;, &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>&apos;DEEPLINK&apos;</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>3</sequenceNumber>
            <name>MSH.6.1  --&gt; ID contrat deeplink</name>
            <script>tmp[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.1&apos;] = validate(globalMap.get(&apos;DEEPLINK_SITE_ID&apos;), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>globalMap.get(&apos;DEEPLINK_SITE_ID&apos;)</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>4</sequenceNumber>
            <name>MSH-7.1 =&gt; Date message</name>
            <script>tmp[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;] = validate(DateUtil.getCurrentDate(&quot;yyyyMMddHHmmss&quot;), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>DateUtil.getCurrentDate(&quot;yyyyMMddHHmmss&quot;)</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>5</sequenceNumber>
            <name>MSH-10-1 =&gt; Controle ID</name>
            <script>tmp[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;] = validate(msg[&apos;MSH&apos;][&apos;messageControlId_value&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;MSH&apos;][&apos;messageControlId_value&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>6</sequenceNumber>
            <name>ID patient BEA </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.2&apos;][&apos;PID.2.1&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;bea_identifier&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.2&apos;][&apos;PID.2.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;bea_identifier&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>7</sequenceNumber>
            <name>Patient Identifier List - ID (PID.3.1) </name>
            <script>for (var i = 0; i &lt; msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;].length; i++) {
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][i][&apos;PID.3.1&apos;] = msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;][i][&apos;id&apos;];
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][i][&apos;PID.3.4&apos;] = msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;][i][&apos;assigning_authority_namespace_id&apos;];
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][i][&apos;PID.3.5&apos;] = msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;][i][&apos;type_code_id&apos;];
}







/*
logger.info(&quot;tmp&quot;)
logger.info(typeof tmp[&apos;PID&apos;][&apos;PID.3&apos;])
logger.info(&quot;msg&quot;)
logger.info(typeof msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;])


 
for (var i = 0; i &lt; msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;].length; i++) {
	var y = parseInt(i + 1)
	logger.info(&quot;iterator&quot;)
	logger.info(typeof i)
	logger.info(i + 1)
	logger.info(y)
	logger.info(typeof y)
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][y][&apos;PID.3.1&apos;] = msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;][i][&apos;id&apos;];
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][y][&apos;PID.3.4&apos;] = msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;][i][&apos;assigning_authority_namespace_id&apos;];
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][y][&apos;PID.3.5&apos;] = msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;][i][&apos;type_code_id&apos;];
}
*/

// const beaIdentifier = {
//     &quot;PID.3.1&quot;: msg[&apos;PATIENT&apos;][&apos;bea_identifier&apos;],
//     &quot;PID.3.4&quot;: &apos;BEA&apos;,
//     &quot;PID.3.5&quot;: &apos;PI&apos;
// }

// tmp[&apos;PID&apos;][&apos;PID.3&apos;].unshift(beaIdentifier)
 
/*  ajout de l&apos;ID BEA  pour dEEPLINK  en première position */
/*
tmp[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;] = msg[&apos;PATIENT&apos;][&apos;bea_identifier&apos;];
tmp[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.4&apos;] = &apos;BEA&apos;
tmp[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.5&apos;] = &apos;PI&apos;
*/</script>
            <type>JavaScript</type>
            <data>
              <entry>
                <string>Script</string>
                <string>for (var i = 0; i &lt; msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;].length; i++) {
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][i][&apos;PID.3.1&apos;] = msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;][i][&apos;id&apos;];
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][i][&apos;PID.3.4&apos;] = msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;][i][&apos;assigning_authority_namespace_id&apos;];
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][i][&apos;PID.3.5&apos;] = msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;][i][&apos;type_code_id&apos;];
}







/*
logger.info(&quot;tmp&quot;)
logger.info(typeof tmp[&apos;PID&apos;][&apos;PID.3&apos;])
logger.info(&quot;msg&quot;)
logger.info(typeof msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;])


 
for (var i = 0; i &lt; msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;].length; i++) {
	var y = parseInt(i + 1)
	logger.info(&quot;iterator&quot;)
	logger.info(typeof i)
	logger.info(i + 1)
	logger.info(y)
	logger.info(typeof y)
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][y][&apos;PID.3.1&apos;] = msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;][i][&apos;id&apos;];
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][y][&apos;PID.3.4&apos;] = msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;][i][&apos;assigning_authority_namespace_id&apos;];
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][y][&apos;PID.3.5&apos;] = msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;][i][&apos;type_code_id&apos;];
}
*/

// const beaIdentifier = {
//     &quot;PID.3.1&quot;: msg[&apos;PATIENT&apos;][&apos;bea_identifier&apos;],
//     &quot;PID.3.4&quot;: &apos;BEA&apos;,
//     &quot;PID.3.5&quot;: &apos;PI&apos;
// }

// tmp[&apos;PID&apos;][&apos;PID.3&apos;].unshift(beaIdentifier)
 
/*  ajout de l&apos;ID BEA  pour dEEPLINK  en première position */
/*
tmp[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;] = msg[&apos;PATIENT&apos;][&apos;bea_identifier&apos;];
tmp[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.4&apos;] = &apos;BEA&apos;
tmp[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.5&apos;] = &apos;PI&apos;
*/</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>8</sequenceNumber>
            <name>Patient Name - Family Last Name (PID.5.1) </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.1&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;last_name&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;last_name&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>9</sequenceNumber>
            <name>Patient Name - Given Name (PID.5.2) </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.2&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;first_name&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.2&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;first_name&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>10</sequenceNumber>
            <name>Patient  Date/Time of Birth - Time of An Event (PID.7.1)  </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;] = validate(DateUtil.convertDate( &apos;yyyy-MM-dd&apos;, &apos;yyyyMMdd&apos;, msg[&apos;PATIENT&apos;][&apos;birthdate&apos;]), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>DateUtil.convertDate( &apos;yyyy-MM-dd&apos;, &apos;yyyyMMdd&apos;, msg[&apos;PATIENT&apos;][&apos;birthdate&apos;])</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>11</sequenceNumber>
            <name>Patient Sex - Value (PID.8.1)  </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.8&apos;][&apos;PID.8.1&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;sex&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.8&apos;][&apos;PID.8.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;sex&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>12</sequenceNumber>
            <name>Patient  Street Address (PID.11.1) </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.1&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;street_address&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;street_address&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>13</sequenceNumber>
            <name>Patient  City (PID.11.3) </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.3&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;city&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.3&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;city&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>14</sequenceNumber>
            <name>Patient  State or Province (PID.11.4)  </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.4&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;state&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.4&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;state&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>15</sequenceNumber>
            <name>Patient_zip_code (PID.11.5)</name>
            <script>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.5&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;zip_code&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.5&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;zip_code&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>16</sequenceNumber>
            <name>Patient  Phone Number - Home   (PID.13.1)</name>
            <script>tmp[&apos;PID&apos;][&apos;PID.13&apos;][&apos;PID.13.1&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;private_phone_number&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.13&apos;][&apos;PID.13.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;private_phone_number&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>17</sequenceNumber>
            <name>Patient  Phone Number - Business - (PID.14.1)</name>
            <script>tmp[&apos;PID&apos;][&apos;PID.14&apos;][&apos;PID.14.1&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;business_phone_number&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.14&apos;][&apos;PID.14.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;business_phone_number&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>18</sequenceNumber>
            <name>Patient Mail (&apos;PID.13.4)</name>
            <script>tmp[&apos;PID&apos;][&apos;PID.13&apos;][&apos;PID.13.4&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;mail&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.13&apos;][&apos;PID.13.4&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;mail&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>19</sequenceNumber>
            <name>Patient  NIR number (PID.19.1)</name>
            <script>tmp[&apos;PID&apos;][&apos;PID.19&apos;][&apos;PID.19.1&apos;] = validate(msg[&apos;INSURANCE&apos;][&apos;nir&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.19&apos;][&apos;PID.19.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;INSURANCE&apos;][&apos;nir&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>20</sequenceNumber>
            <name>MRG segment </name>
            <script>/* le segment MRG est reconstruit avec les PAtient ID BEA car Deeeplink  ne sais pas gérer les PatientListe Identifier du RIS.
*/

/* 
ID patient a fusionner
-----------------------
*/
 
tmp[&apos;MRG&apos;][&apos;MRG.1&apos;][&apos;MRG.1.1&apos;]=  $(&apos;mergePatientFromId&apos;)
tmp[&apos;MRG&apos;][&apos;MRG.1&apos;][&apos;MRG.1.4&apos;]= &apos;BEA&apos;</script>
            <type>JavaScript</type>
            <data>
              <entry>
                <string>Script</string>
                <string>/* le segment MRG est reconstruit avec les PAtient ID BEA car Deeeplink  ne sais pas gérer les PatientListe Identifier du RIS.
*/

/* 
ID patient a fusionner
-----------------------
*/
 
tmp[&apos;MRG&apos;][&apos;MRG.1&apos;][&apos;MRG.1.1&apos;]=  $(&apos;mergePatientFromId&apos;)
tmp[&apos;MRG&apos;][&apos;MRG.1&apos;][&apos;MRG.1.4&apos;]= &apos;BEA&apos;</string>
              </entry>
            </data>
          </step>
        </steps>
        <inboundTemplate encoding="base64">ew0KICAiTVNIIiA6IHsNCiAgICAic2VuZGluZ0FwcGxpY2F0aW9uX25hbWVzcGFjZUlkIiA6ICJY
UExPUkUiLA0KICAgICJzZW5kaW5nRmFjaWxpdHlfbmFtZXNwYWNlSWQiIDogIlhQTE9SRSIsDQog
ICAgImRhdGVPclRpbWVPZk1lc3NhZ2VfdGltZU9mQW5FdmVudCIgOiAiMjAyMC0xMi0yOCAwNzo0
OTowMCIsDQogICAgIm1lc3NhZ2VUeXBlIiA6ICJTSVUiLA0KICAgICJtZXNzYWdlVHlwZV90cmln
Z2VyRXZlbnQiIDogIlMxMiIsDQogICAgIm1lc3NhZ2VDb250cm9sSWRfdmFsdWUiIDogIkExMDI3
MDU2ODUwMjA3NDg0MyIsDQogICAgImFjY2VwdEFja25vd2xlZGdtZW50VHlwZV92YWx1ZSIgOiAi
IiwNCiAgICAiYXBwbGljYXRpb25BY2tub3dsZWRnbWVudFR5cGVfdmFsdWUiIDogIiIsDQogICAg
InNlcXVlbmNlTnVtYmVyX3ZhbHVlIiA6IDAsDQogICAgImNvZGVTaXRlIiA6ICJDRUQiDQogIH0s
DQogICJQQVRJRU5UIiA6IHsNCiAgICAiYmVhX2lkZW50aWZpZXIiIDogIjEiLAogICAgImhsN19p
ZGVudGlmaWVyIiA6ICJYQzAwMDAwMjcxOTUiLA0KICAgICJobDdfaWRlbnRpZmllckxpc3QiIDog
Ww0KICAgICAgew0KICAgICAgICAiaWQiIDogIlhDMDAwMDAyNzE5NSIsDQogICAgICAgICJhc3Np
Z25pbmdfYXV0aG9yaXR5X25hbWVzcGFjZV9pZCIgOiAiRURMIiwNCiAgICAgICAgInR5cGVfY29k
ZV9pZCIgOiAiUEkiDQogICAgICB9DQogICAgXSwNCiAgICAibGFzdF9uYW1lIiA6ICJHVVlPTiIs
DQogICAgImZpcnN0X25hbWUiIDogIkpFQU4gTUlDSEVMIiwNCiAgICAiYmlydGhkYXRlIiA6ICIx
OTY1LTAzLTA5IiwNCiAgICAic2V4IiA6ICJNIiwNCiAgICAic3RyZWV0X2FkZHJlc3MiIDogIjMg
UlVFIFRSVUdVRVQgIiwNCiAgICAiY2l0eSIgOiAiVE9VTE9OIiwNCiAgICAic3RhdGUiIDogIiIs
DQogICAgInppcF9jb2RlIiA6ICI4MzAwMCIsDQogICAgInByaXZhdGVfcGhvbmVfbnVtYmVyIiA6
ICIiLA0KICAgICJidXNpbmVzc19waG9uZV9udW1iZXIiIDogIiIsDQogICAgIm1haWwiIDogIiIN
CiAgfSwNCiAgIk1FUkdFIjogewoJCSJQYXRpZW50SWRlbnRpZmllckxpc3RfaWQiOiAgbnVsbCwK
CQkiYXNzaWduaW5nX2F1dGhvcml0eV9uYW1lc3BhY2VfaWQiOiAgbnVsbCwKCQkidHlwZV9jb2Rl
X2lkIiA6CSBudWxsCgl9LAogICJWSVNJVCIgOiB7DQogICAgInZpc2l0X251bWJlciIgOiAiQTEw
MjcwNTY4NTAwIiwNCiAgICAiZXhwZWN0ZWRfYWRtaXRfZGF0ZXRpbWUiIDogIjIwMjAtMTItMjgg
MDc6NDk6MDAiDQogIH0sDQogICJJTlNVUkFOQ0UiIDogew0KICAgICJpbnN1cmFuY2VfdHlwZSIg
OiAiQU1PIiwNCiAgICAibmlyIiA6ICIxNjUwMzk5MzQxMDgyMjciLA0KICAgICJhbW9fY29kZV9y
ZWdpbWVfY2Fpc3NlX2NlbnRyZSIgOiBudWxsLA0KICAgICJhbW9fZHJvaXRfZGVidXQiIDogbnVs
bCwNCiAgICAiYW1vX2Ryb2l0X2ZpbiIgOiBudWxsDQogIH0sDQogICJSRUZFUlJJTkdfRE9DVE9S
IiA6ICIiLA0KICAiU1RVRFkiIDoKICAgIHsNCiAgICAgICJhcHBvaW50bWVudF9udW1iZXIiIDog
IkExMDI3MDU2ODUwMCIsDQogICAgICAiYWNjZXNzaW9uX251bWJlciIgOiAiQTEwMjcwNTY4NTAw
IiwNCiAgICAgICJpbnN0YW5jZV91aWQiIDogIkExMDI3MDU2ODUwMF8wIiwNCiAgICAgICJsb2Nh
dGlvbl9jb2RlIiA6ICJSQURVUkMiLA0KICAgICAgImxvY2F0aW9uX2xhYmVsIiA6ICJSQURJTyBV
UkdFTkNFUyBDRURSRVMiLA0KICAgICAgImxvY2F0aW9uX3R5cGVfY29kZSIgOiAiTk9UX1VTRUQi
LA0KICAgICAgImxvY2F0aW9uX3RpY2tldF9tZXNzYWdlIiA6IG51bGwsDQogICAgICAibG9jYXRp
b25fcGFwZXJfbWVzc2FnZSIgOiBudWxsLA0KICAgICAgInN0dWR5X3N0YXR1c19jb2RlIiA6ICJT
Q0hFRFVMRUQiLA0KICAgICAgInN0dWR5X3R5cGVfY29kZSIgOiAiUkFEVVJDX1JQT1VNIiwNCiAg
ICAgICJzaGlmdF9jb2RlIiA6ICJSQURVUkMiLA0KICAgICAgInN0dWR5X2FsdGVybmF0aXZlX3R5
cGVfY29kZSIgOiBudWxsLA0KICAgICAgInN0dWR5X3R5cGVfdGV4dCIgOiAiUE9VTU9OUyAxMCIs
DQogICAgICAic2NoZWR1bGVkX2RhdGV0aW1lIiA6ICIyMDIwLTEyLTI4IDEwOjEwOjAwIiwNCiAg
ICAgICJtb2RhbGl0eV9jb2RlIiA6ICJSQSIsDQogICAgICAibW9kYWxpdHlfdGV4dCIgOiAiUkFE
SU8gVEhPUkFDSVFVRSAvIEFTUCIsDQogICAgICAib3JpZ2luIiA6ICJHRVJJIiwNCiAgICAgICJk
dXJhdGlvbiIgOiAiMjAiLA0KICAgICAgInByZXNjcmliaW5nX2RvY3RvciIgOiB7DQogICAgICAg
ICJycHBzX251bWJlciIgOiAiMTk1MDEiLA0KICAgICAgICAibGFzdF9uYW1lIiA6ICJMQVBFUlRP
VCIsDQogICAgICAgICJmaXJzdF9uYW1lIiA6ICJNQVJUSU5FIg0KICAgICAgfQ0KICAgIH0NLA0K
ICAiRE9DVU1FTlRTIiA6IFsgXQp9</inboundTemplate>
        <outboundTemplate encoding="base64">TVNIfF5+XCZ8fHx8fHx8QURUXkE0MHwzfFB8Mi4zLjF8fHx8fHxVVEYtOHxGUnwNUElEfHx8Xl5e
Xnx8Xl5eXl5MfHx8fHx8Xl5efHxeXl58fHx8fHwKTVJHfF5eXl5QSXx8fHx8CiA=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>HL7V2</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r\n</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r\n</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.4.2">
        <steps/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.4.2">
        <rules>
          <rule>
            <sequenceNumber>0</sequenceNumber>
            <name>Accept message if &quot;msg[&apos;MSH&apos;][&apos;messageType&apos;]&quot; equals &apos;ADT&apos;</name>
            <data>
              <entry>
                <string>Field</string>
                <string>msg[&apos;MSH&apos;][&apos;messageType&apos;]</string>
              </entry>
              <entry>
                <string>Name</string>
                <string></string>
              </entry>
              <entry>
                <string>OriginalField</string>
                <string></string>
              </entry>
              <entry>
                <string>Equals</string>
                <string>1</string>
              </entry>
              <entry>
                <string>Values</string>
                <list>
                  <string>&apos;ADT&apos;</string>
                </list>
              </entry>
            </data>
            <type>Rule Builder</type>
            <script>if(msg[&apos;MSH&apos;][&apos;messageType&apos;] == &apos;ADT&apos;) {
	return true;
}
return false;</script>
            <operator>NONE</operator>
          </rule>
          <rule>
            <sequenceNumber>1</sequenceNumber>
            <name>Accept message if &quot;msg[&apos;MSH&apos;][&apos;messageType_triggerEvent&apos;]&quot; equals &apos;A40&apos;</name>
            <data>
              <entry>
                <string>Field</string>
                <string>msg[&apos;MSH&apos;][&apos;messageType_triggerEvent&apos;]</string>
              </entry>
              <entry>
                <string>Name</string>
                <string></string>
              </entry>
              <entry>
                <string>OriginalField</string>
                <string></string>
              </entry>
              <entry>
                <string>Equals</string>
                <string>1</string>
              </entry>
              <entry>
                <string>Values</string>
                <list>
                  <string>&apos;A40&apos;</string>
                </list>
              </entry>
            </data>
            <type>Rule Builder</type>
            <script>if(msg[&apos;MSH&apos;][&apos;messageType_triggerEvent&apos;] == &apos;A40&apos;) {
	return true;
}
return false;</script>
            <operator>AND</operator>
          </rule>
          <rule>
            <sequenceNumber>2</sequenceNumber>
            <name>Accept message if &quot;$(&apos;mergePatientFromId&apos;)&quot; does not equal &apos;&apos; or null</name>
            <data>
              <entry>
                <string>Field</string>
                <string>$(&apos;mergePatientFromId&apos;)</string>
              </entry>
              <entry>
                <string>Name</string>
                <string></string>
              </entry>
              <entry>
                <string>OriginalField</string>
                <string></string>
              </entry>
              <entry>
                <string>Equals</string>
                <string>0</string>
              </entry>
              <entry>
                <string>Values</string>
                <list>
                  <string>&apos;&apos;</string>
                  <string>null</string>
                </list>
              </entry>
            </data>
            <type>Rule Builder</type>
            <script>if($(&apos;mergePatientFromId&apos;) != &apos;&apos; &amp;&amp; $(&apos;mergePatientFromId&apos;) != null) {
	return true;
}
return false;</script>
            <operator>AND</operator>
          </rule>
          <rule>
            <sequenceNumber>3</sequenceNumber>
            <name>Accept message if &quot;$(&apos;patient_id&apos;)&quot; does not equal &apos;&apos; or null</name>
            <data>
              <entry>
                <string>Field</string>
                <string>$(&apos;patient_id&apos;)</string>
              </entry>
              <entry>
                <string>Name</string>
                <string></string>
              </entry>
              <entry>
                <string>OriginalField</string>
                <string></string>
              </entry>
              <entry>
                <string>Equals</string>
                <string>0</string>
              </entry>
              <entry>
                <string>Values</string>
                <list>
                  <string>&apos;&apos;</string>
                  <string>null</string>
                </list>
              </entry>
            </data>
            <type>Rule Builder</type>
            <script>if($(&apos;patient_id&apos;) != &apos;&apos; &amp;&amp; $(&apos;patient_id&apos;) != null) {
	return true;
}
return false;</script>
            <operator>AND</operator>
          </rule>
        </rules>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.4.2">
      <metaDataId>12</metaDataId>
      <name>Traduction des codes examens deeplink pour SIU et ORM</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.4.2">
        <pluginProperties/>
        <destinationConnectorProperties version="3.4.2">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
        </destinationConnectorProperties>
        <host>http://localhost/beacore/studyTypes/deeplinkTranslation/${study_type_code}</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>get</method>
        <headers class="linked-hash-map">
          <entry>
            <string>Authorization</string>
            <list>
              <string>Bearer ${accessToken}</string>
            </list>
          </entry>
          <entry>
            <string>Content-Type</string>
            <list>
              <string>application/json</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map"/>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content></content>
        <contentType>text/plain</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="3.4.2">
        <steps/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.4.2">
        <steps>
          <step>
            <sequenceNumber>0</sequenceNumber>
            <name>Recup  traduction code examen </name>
            <script>var modality_code  = &apos;&apos;;
var anatomic_region = &apos;&apos;;
var medical_protocol_code =&apos;&apos;;
var  response_translate_study_deeplink= &apos;not_found&apos;;

try {
	if (msg[&apos;response&apos;].toString() == &apos;found&apos;) {
	   response_translate_study_deeplink = &apos;found&apos;;
         modality_code	= msg[&apos;attributes&apos;][&apos;modalityCode&apos;]  ;
         anatomic_region	= msg[&apos;attributes&apos;][&apos;anatomicRegion&apos;] ; 
         medical_protocol_code =  msg[&apos;attributes&apos;][&apos;medicalProtocolCode&apos;] ; 

	}else{
		response_translate_study_deeplink = &apos;not_found&apos;;
		logger.info(&apos;traduction DEEPLINK code examen manquante &apos;)
		modality_code  = &apos;&apos;;
		anatomic_region = &apos;&apos;;
		medical_protocol_code =&apos;&apos;;
	}
	
} catch (e) {
	logger.error(e);
}

channelMap.put(&apos;response_translate_study_deeplink&apos;,   validate( response_translate_study_deeplink , &apos;&apos;, new Array()));

channelMap.put(&apos;modality_code&apos;,   validate( modality_code , &apos;&apos;, new Array()));
channelMap.put(&apos;anatomic_region&apos;, validate( anatomic_region , &apos;&apos;, new Array()));
channelMap.put(&apos;medical_protocol_code&apos;, validate(medical_protocol_code , &apos;&apos;, new Array()));</script>
            <type>JavaScript</type>
            <data>
              <entry>
                <string>Script</string>
                <string>var modality_code  = &apos;&apos;;
var anatomic_region = &apos;&apos;;
var medical_protocol_code =&apos;&apos;;
var  response_translate_study_deeplink= &apos;not_found&apos;;

try {
	if (msg[&apos;response&apos;].toString() == &apos;found&apos;) {
	   response_translate_study_deeplink = &apos;found&apos;;
         modality_code	= msg[&apos;attributes&apos;][&apos;modalityCode&apos;]  ;
         anatomic_region	= msg[&apos;attributes&apos;][&apos;anatomicRegion&apos;] ; 
         medical_protocol_code =  msg[&apos;attributes&apos;][&apos;medicalProtocolCode&apos;] ; 

	}else{
		response_translate_study_deeplink = &apos;not_found&apos;;
		logger.info(&apos;traduction DEEPLINK code examen manquante &apos;)
		modality_code  = &apos;&apos;;
		anatomic_region = &apos;&apos;;
		medical_protocol_code =&apos;&apos;;
	}
	
} catch (e) {
	logger.error(e);
}

channelMap.put(&apos;response_translate_study_deeplink&apos;,   validate( response_translate_study_deeplink , &apos;&apos;, new Array()));

channelMap.put(&apos;modality_code&apos;,   validate( modality_code , &apos;&apos;, new Array()));
channelMap.put(&apos;anatomic_region&apos;, validate( anatomic_region , &apos;&apos;, new Array()));
channelMap.put(&apos;medical_protocol_code&apos;, validate(medical_protocol_code , &apos;&apos;, new Array()));</string>
              </entry>
            </data>
          </step>
        </steps>
        <inboundTemplate encoding="base64">eyAgCiAgInJlc3BvbnNlIjogImZvdW5kIiwKICAgImF0dHJpYnV0ZXMiIDogewoJCSJpZCI6IG51
bGwsCgkJIm1vZGFsaXR5Q29kZSI6IAludWxsICwKCQkiYW5hdG9taWNSZWdpb24iOiAJbnVsbCwK
CQkibWVkaWNhbFByb3RvY29sQ29kZSI6IG51bGwsCiAJCSJzdHVkeURlc2NyaXB0aW9uIjogbnVs
bCwKICAgIH0KfQoKew0KICAicmVzcG9uc2UiIDogIm5vdEZvdW5kIiwNCiAgImF0dHJpYnV0ZXMi
IDogbnVsbA0KfQ==</inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.4.2">
        <rules>
          <rule>
            <sequenceNumber>0</sequenceNumber>
            <name>Accept message if &quot;$(&apos;message_type&apos;)&quot; equals &apos;SIU&apos; or &apos;ORM&apos;</name>
            <data>
              <entry>
                <string>Field</string>
                <string>$(&apos;message_type&apos;)</string>
              </entry>
              <entry>
                <string>Name</string>
                <string></string>
              </entry>
              <entry>
                <string>OriginalField</string>
                <string></string>
              </entry>
              <entry>
                <string>Equals</string>
                <string>1</string>
              </entry>
              <entry>
                <string>Values</string>
                <list>
                  <string>&apos;SIU&apos;</string>
                  <string>&apos;ORM&apos;</string>
                </list>
              </entry>
            </data>
            <type>Rule Builder</type>
            <script>if($(&apos;message_type&apos;) == &apos;SIU&apos; || $(&apos;message_type&apos;) == &apos;ORM&apos;) {
	return true;
}
return false;</script>
            <operator>NONE</operator>
          </rule>
        </rules>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.4.2">
      <metaDataId>1</metaDataId>
      <name>Création SIU  -  Rendez-vous examens standard  DeepLink</name>
      <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.4.2">
        <pluginProperties/>
        <destinationConnectorProperties version="3.4.2">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
        </destinationConnectorProperties>
        <script>/* on cree un SIU  chaque fois que l&apos;on trouve dans le JSON un message qui  est de type SIU
et si on est arrivé a traduire la correspondance avec les codes examens Deeplink

s&apos;il y a plusieurs examens dans le SIU on ne traite que le premier.
celui qui concernera l&apos;accueil du patient et celui sur lequel seront rattaché tuos les documents reçus.
*/
 var message_to_send = connectorMessage.getEncodedData().toString()
channelMap.put(&apos;message_to_send&apos;, message_to_send)</script>
      </properties>
      <transformer version="3.4.2">
        <steps>
          <step>
            <sequenceNumber>0</sequenceNumber>
            <name>MSH-3.1 =&gt; CODE_GROUPE</name>
            <script>tmp[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.1&apos;] = validate($(&apos;code_groupe&apos;), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>$(&apos;code_groupe&apos;)</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>1</sequenceNumber>
            <name>MSH-4.1=&gt; CODE_SITE</name>
            <script>tmp[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;] = validate($(&apos;code_site&apos;), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>$(&apos;code_site&apos;)</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>2</sequenceNumber>
            <name>MSH.5.1  --&gt; Deeplink</name>
            <script>tmp[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.1&apos;] = validate(&apos;DEEPLINK&apos;, &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>&apos;DEEPLINK&apos;</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>3</sequenceNumber>
            <name>MSH.6.1  --&gt; DEEPLINK_SITE_ID </name>
            <script>tmp[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.1&apos;] = validate(globalMap.get(&apos;DEEPLINK_SITE_ID&apos;), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>globalMap.get(&apos;DEEPLINK_SITE_ID&apos;)</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>4</sequenceNumber>
            <name>MSH-7.1 =&gt; Date message</name>
            <script>tmp[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;] = validate(DateUtil.getCurrentDate(&quot;yyyyMMddHHmmss&quot;), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>DateUtil.getCurrentDate(&quot;yyyyMMddHHmmss&quot;)</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>5</sequenceNumber>
            <name>MSH-9.1 =&gt; trigger event</name>
            <script>/* Deeplink ne sait pas traiter le s17  */ 

if (msg[&apos;MSH&apos;][&apos;messageType_triggerEvent&apos;]==&quot;S17&quot;) {
	tmp[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;] = &quot;S15&quot;
}else{
	tmp[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;] = msg[&apos;MSH&apos;][&apos;messageType_triggerEvent&apos;]
}</script>
            <type>JavaScript</type>
            <data>
              <entry>
                <string>Script</string>
                <string>/* Deeplink ne sait pas traiter le s17  */ 

if (msg[&apos;MSH&apos;][&apos;messageType_triggerEvent&apos;]==&quot;S17&quot;) {
	tmp[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;] = &quot;S15&quot;
}else{
	tmp[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;] = msg[&apos;MSH&apos;][&apos;messageType_triggerEvent&apos;]
}</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>6</sequenceNumber>
            <name>MSH-10-1 =&gt; Controle ID</name>
            <script>tmp[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;] = validate(msg[&apos;MSH&apos;][&apos;messageControlId_value&apos;]+&apos;-&apos;+ DateUtil.getCurrentDate(&quot;HHmmss&quot;), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;MSH&apos;][&apos;messageControlId_value&apos;]+&apos;-&apos;+ DateUtil.getCurrentDate(&quot;HHmmss&quot;)</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>7</sequenceNumber>
            <name>SCH 2.1  - Appointment ID </name>
            <script>tmp[&apos;SCH&apos;][&apos;SCH.2&apos;][&apos;SCH.2.1&apos;] = validate(msg[&apos;STUDY&apos;][&apos;appointment_number&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;SCH&apos;][&apos;SCH.2&apos;][&apos;SCH.2.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;STUDY&apos;][&apos;appointment_number&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>8</sequenceNumber>
            <name>SCH 8.1 - Appointment type  -code examen du site client</name>
            <script>tmp[&apos;SCH&apos;][&apos;SCH.8&apos;][&apos;SCH.8.1&apos;] = validate(msg[&apos;STUDY&apos;][&apos;study_type_code&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;SCH&apos;][&apos;SCH.8&apos;][&apos;SCH.8.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;STUDY&apos;][&apos;study_type_code&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>9</sequenceNumber>
            <name>SCH 8.2 - Appoitment type - texte code examens site client</name>
            <script>tmp[&apos;SCH&apos;][&apos;SCH.8&apos;][&apos;SCH.8.2&apos;] = validate(msg[&apos;STUDY&apos;][&apos;study_type_text&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;SCH&apos;][&apos;SCH.8&apos;][&apos;SCH.8.2&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;STUDY&apos;][&apos;study_type_text&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>10</sequenceNumber>
            <name>SCH 8.3 - name of coding system -  groupe </name>
            <script>tmp[&apos;SCH&apos;][&apos;SCH.8&apos;][&apos;SCH.8.3&apos;] = validate(globalMap.get(&apos;CODE_GROUPE&apos;), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;SCH&apos;][&apos;SCH.8&apos;][&apos;SCH.8.3&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>globalMap.get(&apos;CODE_GROUPE&apos;)</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>11</sequenceNumber>
            <name>SCH 9.1 - Appointment duration</name>
            <script>tmp[&apos;SCH&apos;][&apos;SCH.9&apos;][&apos;SCH.9.1&apos;] = validate(msg[&apos;STUDY&apos;][&apos;duration&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;SCH&apos;][&apos;SCH.9&apos;][&apos;SCH.9.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;STUDY&apos;][&apos;duration&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>12</sequenceNumber>
            <name>SCH.11.4 -Appointment  Start date time</name>
            <script>tmp[&apos;SCH&apos;][&apos;SCH.11&apos;][&apos;SCH.11.4&apos;] = validate(DateUtil.convertDate( &apos;yyyy-MM-dd HH:mm:ss&apos;, &apos;yyyyMMddHHmm&apos;,msg[&apos;STUDY&apos;][&apos;scheduled_datetime&apos;]), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;SCH&apos;][&apos;SCH.11&apos;][&apos;SCH.11.4&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>DateUtil.convertDate( &apos;yyyy-MM-dd HH:mm:ss&apos;, &apos;yyyyMMddHHmm&apos;,msg[&apos;STUDY&apos;][&apos;scheduled_datetime&apos;])</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>13</sequenceNumber>
            <name>ID patient BEA </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.2&apos;][&apos;PID.2.1&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;bea_identifier&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.2&apos;][&apos;PID.2.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;bea_identifier&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>14</sequenceNumber>
            <name>Patient Identifier List - ID (PID.3.1) </name>
            <script>/*  ajout de l&apos;ID BEA  pour dEEPLINK  en première position */
/*tmp[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;] = msg[&apos;PATIENT&apos;][&apos;bea_identifier&apos;];
tmp[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.4&apos;] = &apos;BEA&apos;
tmp[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.5&apos;] = &apos;PI&apos;
*/

for (var i = 0; i &lt; msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;].length; i++) {
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][i][&apos;PID.3.1&apos;] = msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;][i][&apos;id&apos;];
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][i][&apos;PID.3.4&apos;] = msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;][i][&apos;assigning_authority_namespace_id&apos;];
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][i][&apos;PID.3.5&apos;] = msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;][i][&apos;type_code_id&apos;];
}</script>
            <type>JavaScript</type>
            <data>
              <entry>
                <string>Script</string>
                <string>/*  ajout de l&apos;ID BEA  pour dEEPLINK  en première position */
/*tmp[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;] = msg[&apos;PATIENT&apos;][&apos;bea_identifier&apos;];
tmp[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.4&apos;] = &apos;BEA&apos;
tmp[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.5&apos;] = &apos;PI&apos;
*/

for (var i = 0; i &lt; msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;].length; i++) {
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][i][&apos;PID.3.1&apos;] = msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;][i][&apos;id&apos;];
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][i][&apos;PID.3.4&apos;] = msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;][i][&apos;assigning_authority_namespace_id&apos;];
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][i][&apos;PID.3.5&apos;] = msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;][i][&apos;type_code_id&apos;];
}</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>15</sequenceNumber>
            <name>Patient Name - Family Last Name (PID.5.1) </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.1&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;last_name&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;last_name&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>16</sequenceNumber>
            <name>Patient Name - Given Name (PID.5.2) </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.2&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;first_name&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.2&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;first_name&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>17</sequenceNumber>
            <name>Patient  Date/Time of Birth - Time of An Event (PID.7.1)  </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;] = validate(DateUtil.convertDate( &apos;yyyy-MM-dd&apos;, &apos;yyyyMMdd&apos;, msg[&apos;PATIENT&apos;][&apos;birthdate&apos;]), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>DateUtil.convertDate( &apos;yyyy-MM-dd&apos;, &apos;yyyyMMdd&apos;, msg[&apos;PATIENT&apos;][&apos;birthdate&apos;])</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>18</sequenceNumber>
            <name>Patient Sex - Value (PID.8.1)  </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.8&apos;][&apos;PID.8.1&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;sex&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.8&apos;][&apos;PID.8.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;sex&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>19</sequenceNumber>
            <name>Patient  Street Address (PID.11.1) </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.1&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;street_address&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;street_address&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>20</sequenceNumber>
            <name>Patient  City (PID.11.3) </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.3&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;city&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.3&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;city&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>21</sequenceNumber>
            <name>Patient  State or Province (PID.11.4)  </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.4&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;state&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.4&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;state&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>22</sequenceNumber>
            <name>Patient_zip_code (PID.11.5)</name>
            <script>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.5&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;zip_code&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.5&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;zip_code&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>23</sequenceNumber>
            <name>Patient  Phone Number - Home   (PID.13.1)</name>
            <script>tmp[&apos;PID&apos;][&apos;PID.13&apos;][&apos;PID.13.1&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;private_phone_number&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.13&apos;][&apos;PID.13.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;private_phone_number&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>24</sequenceNumber>
            <name>Patient  Phone Number - Business - (PID.14.1)</name>
            <script>tmp[&apos;PID&apos;][&apos;PID.14&apos;][&apos;PID.14.1&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;business_phone_number&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.14&apos;][&apos;PID.14.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;business_phone_number&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>25</sequenceNumber>
            <name>Patient Mail (&apos;PID.13.4)</name>
            <script>tmp[&apos;PID&apos;][&apos;PID.13&apos;][&apos;PID.13.4&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;mail&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.13&apos;][&apos;PID.13.4&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;mail&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>26</sequenceNumber>
            <name>Patient  NIR number (PID.19.1)</name>
            <script>tmp[&apos;PID&apos;][&apos;PID.19&apos;][&apos;PID.19.1&apos;] = validate(msg[&apos;INSURANCE&apos;][&apos;nir&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.19&apos;][&apos;PID.19.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;INSURANCE&apos;][&apos;nir&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>27</sequenceNumber>
            <name>PV1 - prescribing doctor - RPPS code</name>
            <script>tmp[&apos;PV1&apos;][&apos;PV1.8&apos;][&apos;PV1.8.1&apos;] = validate(msg[&apos;STUDY&apos;][&apos;prescribing_doctor&apos;][&apos;rpps_number&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PV1&apos;][&apos;PV1.8&apos;][&apos;PV1.8.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;STUDY&apos;][&apos;prescribing_doctor&apos;][&apos;rpps_number&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>28</sequenceNumber>
            <name>PV1 - prescribing doctor - Last name</name>
            <script>tmp[&apos;PV1&apos;][&apos;PV1.8&apos;][&apos;PV1.8.2&apos;] = validate(msg[&apos;STUDY&apos;][&apos;prescribing_doctor&apos;][&apos;last_name&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PV1&apos;][&apos;PV1.8&apos;][&apos;PV1.8.2&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;STUDY&apos;][&apos;prescribing_doctor&apos;][&apos;last_name&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>29</sequenceNumber>
            <name>PV1 - prescribing doctor - First name</name>
            <script>tmp[&apos;PV1&apos;][&apos;PV1.8&apos;][&apos;PV1.8.3&apos;] = validate(msg[&apos;STUDY&apos;][&apos;prescribing_doctor&apos;][&apos;first_name&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PV1&apos;][&apos;PV1.8&apos;][&apos;PV1.8.3&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;STUDY&apos;][&apos;prescribing_doctor&apos;][&apos;first_name&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>30</sequenceNumber>
            <name>AIS 3.1.1 .- code examen Deeplink Modality</name>
            <script>tmp[&apos;AIS&apos;][&apos;AIS.3&apos;][&apos;AIS.3.1&apos;][&apos;AIS.3.1.1&apos;] = validate($(&apos;modality_code&apos;), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;AIS&apos;][&apos;AIS.3&apos;][&apos;AIS.3.1&apos;][&apos;AIS.3.1.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>$(&apos;modality_code&apos;)</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>31</sequenceNumber>
            <name>AIS 3.1.2.- code examen Deeplink anatomic region</name>
            <script>tmp[&apos;AIS&apos;][&apos;AIS.3&apos;][&apos;AIS.3.1&apos;][&apos;AIS.3.1.2&apos;] = validate($(&apos;anatomic_region&apos;), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;AIS&apos;][&apos;AIS.3&apos;][&apos;AIS.3.1&apos;][&apos;AIS.3.1.2&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>$(&apos;anatomic_region&apos;)</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>32</sequenceNumber>
            <name>AIS.3.1. 3  - protocole</name>
            <script>tmp[&apos;AIS&apos;][&apos;AIS.3&apos;][&apos;AIS.3.1&apos;][&apos;AIS.3.1.3&apos;] = validate($(&apos;medical_protocol_code&apos;), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;AIS&apos;][&apos;AIS.3&apos;][&apos;AIS.3.1&apos;][&apos;AIS.3.1.3&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>$(&apos;medical_protocol_code&apos;)</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>33</sequenceNumber>
            <name>AIS.3.3 - name of coding system DEEPLINK</name>
            <script>tmp[&apos;AIS&apos;][&apos;AIS.3&apos;][&apos;AIS.3.3&apos;] = validate(&apos;DEEPLINK&apos;, &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;AIS&apos;][&apos;AIS.3&apos;][&apos;AIS.3.3&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>&apos;DEEPLINK&apos;</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>34</sequenceNumber>
            <name>AIL 6.1 - start date time </name>
            <script>tmp[&apos;AIL&apos;][&apos;AIL.6&apos;][&apos;AIL.6.1&apos;] = validate(DateUtil.convertDate( &apos;yyyy-MM-dd HH:mm:ss&apos;, &apos;yyyyMMddHHmm&apos;,msg[&apos;STUDY&apos;][&apos;scheduled_datetime&apos;]), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;AIL&apos;][&apos;AIL.6&apos;][&apos;AIL.6.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>DateUtil.convertDate( &apos;yyyy-MM-dd HH:mm:ss&apos;, &apos;yyyyMMddHHmm&apos;,msg[&apos;STUDY&apos;][&apos;scheduled_datetime&apos;])</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>35</sequenceNumber>
            <name>AIL 9.1 - duration</name>
            <script>tmp[&apos;AIL&apos;][&apos;AIL.9&apos;][&apos;AIL.9.1&apos;] = validate(msg[&apos;STUDY&apos;][&apos;duration&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;AIL&apos;][&apos;AIL.9&apos;][&apos;AIL.9.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;STUDY&apos;][&apos;duration&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>36</sequenceNumber>
            <name>AIL 3.1 - code vaccation</name>
            <script>tmp[&apos;AIL&apos;][&apos;AIL.3&apos;][&apos;AIL.3.1&apos;] = validate(msg[&apos;STUDY&apos;][&apos;shift_code&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;AIL&apos;][&apos;AIL.3&apos;][&apos;AIL.3.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;STUDY&apos;][&apos;shift_code&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
        </steps>
        <inboundTemplate encoding="base64">ew0KICAiTVNIIiA6IHsNCiAgICAic2VuZGluZ0FwcGxpY2F0aW9uX25hbWVzcGFjZUlkIiA6ICJY
UExPUkUiLA0KICAgICJzZW5kaW5nRmFjaWxpdHlfbmFtZXNwYWNlSWQiIDogIlhQTE9SRSIsDQog
ICAgImRhdGVPclRpbWVPZk1lc3NhZ2VfdGltZU9mQW5FdmVudCIgOiAiMjAyMC0xMi0yOCAwNzo0
OTowMCIsDQogICAgIm1lc3NhZ2VUeXBlIiA6ICJTSVUiLA0KICAgICJtZXNzYWdlVHlwZV90cmln
Z2VyRXZlbnQiIDogIlMxMiIsDQogICAgIm1lc3NhZ2VDb250cm9sSWRfdmFsdWUiIDogIkExMDI3
MDU2ODUwMjA3NDg0MyIsDQogICAgImFjY2VwdEFja25vd2xlZGdtZW50VHlwZV92YWx1ZSIgOiAi
IiwNCiAgICAiYXBwbGljYXRpb25BY2tub3dsZWRnbWVudFR5cGVfdmFsdWUiIDogIiIsDQogICAg
InNlcXVlbmNlTnVtYmVyX3ZhbHVlIiA6IDAsDQogICAgImNvZGVTaXRlIiA6ICJDRUQiDQogIH0s
DQogICJQQVRJRU5UIiA6IHsNCiAgICAiYmVhX2lkZW50aWZpZXIiIDogIjEiLAogICAgImhsN19p
ZGVudGlmaWVyIiA6ICJYQzAwMDAwMjcxOTUiLA0KICAgICJobDdfaWRlbnRpZmllckxpc3QiIDog
Ww0KICAgICAgew0KICAgICAgICAiaWQiIDogIlhDMDAwMDAyNzE5NSIsDQogICAgICAgICJhc3Np
Z25pbmdfYXV0aG9yaXR5X25hbWVzcGFjZV9pZCIgOiAiRURMIiwNCiAgICAgICAgInR5cGVfY29k
ZV9pZCIgOiAiUEkiDQogICAgICB9DQogICAgXSwNCiAgICAibGFzdF9uYW1lIiA6ICJHVVlPTiIs
DQogICAgImZpcnN0X25hbWUiIDogIkpFQU4gTUlDSEVMIiwNCiAgICAiYmlydGhkYXRlIiA6ICIx
OTY1LTAzLTA5IiwNCiAgICAic2V4IiA6ICJNIiwNCiAgICAic3RyZWV0X2FkZHJlc3MiIDogIjMg
UlVFIFRSVUdVRVQgIiwNCiAgICAiY2l0eSIgOiAiVE9VTE9OIiwNCiAgICAic3RhdGUiIDogIiIs
DQogICAgInppcF9jb2RlIiA6ICI4MzAwMCIsDQogICAgInByaXZhdGVfcGhvbmVfbnVtYmVyIiA6
ICIiLA0KICAgICJidXNpbmVzc19waG9uZV9udW1iZXIiIDogIiIsDQogICAgIm1haWwiIDogIiIN
CiAgfSwNCiAgIk1FUkdFIiA6ICIiLA0KICAiVklTSVQiIDogew0KICAgICJ2aXNpdF9udW1iZXIi
IDogIkExMDI3MDU2ODUwMCIsDQogICAgImV4cGVjdGVkX2FkbWl0X2RhdGV0aW1lIiA6ICIyMDIw
LTEyLTI4IDA3OjQ5OjAwIg0KICB9LA0KICAiSU5TVVJBTkNFIiA6IHsNCiAgICAiaW5zdXJhbmNl
X3R5cGUiIDogIkFNTyIsDQogICAgIm5pciIgOiAiMTY1MDM5OTM0MTA4MjI3IiwNCiAgICAiYW1v
X2NvZGVfcmVnaW1lX2NhaXNzZV9jZW50cmUiIDogbnVsbCwNCiAgICAiYW1vX2Ryb2l0X2RlYnV0
IiA6IG51bGwsDQogICAgImFtb19kcm9pdF9maW4iIDogbnVsbA0KICB9LA0KICAiUkVGRVJSSU5H
X0RPQ1RPUiIgOiAiIiwNCiAgIlNUVURZIiA6CiAgICB7DQogICAgICAiYXBwb2ludG1lbnRfbnVt
YmVyIiA6ICJBMTAyNzA1Njg1MDAiLA0KICAgICAgImFjY2Vzc2lvbl9udW1iZXIiIDogIkExMDI3
MDU2ODUwMCIsDQogICAgICAiaW5zdGFuY2VfdWlkIiA6ICJBMTAyNzA1Njg1MDBfMCIsDQogICAg
ICAibG9jYXRpb25fY29kZSIgOiAiUkFEVVJDIiwNCiAgICAgICJsb2NhdGlvbl9sYWJlbCIgOiAi
UkFESU8gVVJHRU5DRVMgQ0VEUkVTIiwNCiAgICAgICJsb2NhdGlvbl90eXBlX2NvZGUiIDogIk5P
VF9VU0VEIiwNCiAgICAgICJsb2NhdGlvbl90aWNrZXRfbWVzc2FnZSIgOiBudWxsLA0KICAgICAg
ImxvY2F0aW9uX3BhcGVyX21lc3NhZ2UiIDogbnVsbCwNCiAgICAgICJzdHVkeV9zdGF0dXNfY29k
ZSIgOiAiU0NIRURVTEVEIiwNCiAgICAgICJzdHVkeV90eXBlX2NvZGUiIDogIlJBRFVSQ19SUE9V
TSIsDQogICAgICAic2hpZnRfY29kZSIgOiAiUkFEVVJDIiwNCiAgICAgICJzdHVkeV9hbHRlcm5h
dGl2ZV90eXBlX2NvZGUiIDogbnVsbCwNCiAgICAgICJzdHVkeV90eXBlX3RleHQiIDogIlBPVU1P
TlMgMTAiLA0KICAgICAgInNjaGVkdWxlZF9kYXRldGltZSIgOiAiMjAyMC0xMi0yOCAxMDoxMDow
MCIsDQogICAgICAibW9kYWxpdHlfY29kZSIgOiAiUkEiLA0KICAgICAgIm1vZGFsaXR5X3RleHQi
IDogIlJBRElPIFRIT1JBQ0lRVUUgLyBBU1AiLA0KICAgICAgIm9yaWdpbiIgOiAiR0VSSSIsDQog
ICAgICAiZHVyYXRpb24iIDogIjIwIiwNCiAgICAgICJwcmVzY3JpYmluZ19kb2N0b3IiIDogew0K
ICAgICAgICAicnBwc19udW1iZXIiIDogIjE5NTAxIiwNCiAgICAgICAgImxhc3RfbmFtZSIgOiAi
TEFQRVJUT1QiLA0KICAgICAgICAiZmlyc3RfbmFtZSIgOiAiTUFSVElORSINCiAgICAgIH0NCiAg
ICB9DQogLA0KICAiRE9DVU1FTlRTIiA6IFsgXQp9</inboundTemplate>
        <outboundTemplate encoding="base64">TVNIfF5+XCZ8fHx8fHx8U0lVXnx8UHwyLjMuMXx8fHx8fFVURi04fEZSClNDSHx8fHx8fHx8fHx8
fHx8fHx8fHx8fHxeXl58fHx8fA1QSUR8fHx8fF5eXl5eXkx8fHx8fHxeXl5efHxeXl58fHx8fHwK
UFYxfHx8fHx8fHxeXl5efHx8ClJHU3x8fApBSVN8fApBSUx8fAoKIA0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>HL7V2</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r\n</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r\n</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.4.2">
        <steps/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.4.2">
        <rules>
          <rule>
            <sequenceNumber>0</sequenceNumber>
            <name>Accept message if &quot;$(&apos;message_type&apos;)&quot; equals &apos;SIU&apos;</name>
            <data>
              <entry>
                <string>Field</string>
                <string>$(&apos;message_type&apos;)</string>
              </entry>
              <entry>
                <string>Name</string>
                <string></string>
              </entry>
              <entry>
                <string>OriginalField</string>
                <string></string>
              </entry>
              <entry>
                <string>Equals</string>
                <string>1</string>
              </entry>
              <entry>
                <string>Values</string>
                <list>
                  <string>&apos;SIU&apos;</string>
                </list>
              </entry>
            </data>
            <type>Rule Builder</type>
            <script>if($(&apos;message_type&apos;) == &apos;SIU&apos;) {
	return true;
}
return false;</script>
            <operator>NONE</operator>
          </rule>
          <rule>
            <sequenceNumber>1</sequenceNumber>
            <name>Accept message if &quot;$(&apos;response_translate_study_deeplink&apos;)&quot; equals &apos;found&apos;</name>
            <data>
              <entry>
                <string>Field</string>
                <string>$(&apos;response_translate_study_deeplink&apos;)</string>
              </entry>
              <entry>
                <string>Name</string>
                <string></string>
              </entry>
              <entry>
                <string>OriginalField</string>
                <string></string>
              </entry>
              <entry>
                <string>Equals</string>
                <string>1</string>
              </entry>
              <entry>
                <string>Values</string>
                <list>
                  <string>&apos;found&apos;</string>
                </list>
              </entry>
            </data>
            <type>Rule Builder</type>
            <script>if($(&apos;response_translate_study_deeplink&apos;) == &apos;found&apos;) {
	return true;
}
return false;</script>
            <operator>AND</operator>
          </rule>
        </rules>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.4.2">
      <metaDataId>15</metaDataId>
      <name>Creation  d&apos;un SIU à partir de modif récupérées dans un ORM - Examen planifié sans prise de RDV </name>
      <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.4.2">
        <pluginProperties/>
        <destinationConnectorProperties version="3.4.2">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
        </destinationConnectorProperties>
        <script>/* on cree un pour les éditeurs qui n&apos;ont pas de SIU  ORM chaque fois que l&apos;on trouve dans le JSON un message qui  est de type ORM
et si on est arrivé a traduire la correspondance avec les codes examens Deeplink

s&apos;il y a plusieurs examens dans l &apos;ORM on ne traite que le premier.
celui qui concernera l&apos;accueil du patient et celui sur lequel seront rattaché tuos les documents reçus.
*/
 var message_to_send = connectorMessage.getEncodedData().toString()
channelMap.put(&apos;message_to_send&apos;, message_to_send)</script>
      </properties>
      <transformer version="3.4.2">
        <steps>
          <step>
            <sequenceNumber>0</sequenceNumber>
            <name>MSH-3.1 =&gt; CODE_GROUPE</name>
            <script>tmp[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.1&apos;] = validate($(&apos;code_groupe&apos;), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>$(&apos;code_groupe&apos;)</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>1</sequenceNumber>
            <name>MSH-4.1=&gt; CODE_SITE</name>
            <script>tmp[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;] = validate($(&apos;code_site&apos;), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>$(&apos;code_site&apos;)</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>2</sequenceNumber>
            <name>MSH.5.1  --&gt; Deeplink</name>
            <script>tmp[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.1&apos;] = validate(&apos;DEEPLINK&apos;, &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;MSH&apos;][&apos;MSH.5&apos;][&apos;MSH.5.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>&apos;DEEPLINK&apos;</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>3</sequenceNumber>
            <name>MSH.6.1  --&gt; DEEPLINK_SITE_ID </name>
            <script>tmp[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.1&apos;] = validate(globalMap.get(&apos;DEEPLINK_SITE_ID&apos;), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;MSH&apos;][&apos;MSH.6&apos;][&apos;MSH.6.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>globalMap.get(&apos;DEEPLINK_SITE_ID&apos;)</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>4</sequenceNumber>
            <name>MSH-7.1 =&gt; Date message</name>
            <script>tmp[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;] = validate(DateUtil.getCurrentDate(&quot;yyyyMMddHHmmss&quot;), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>DateUtil.getCurrentDate(&quot;yyyyMMddHHmmss&quot;)</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>5</sequenceNumber>
            <name>MSH 9.1 trigger Event</name>
            <script>tmp[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;] = validate(&apos;S12&apos;, &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>&apos;S12&apos;</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>6</sequenceNumber>
            <name>MSH-10-1 =&gt; Controle ID</name>
            <script>tmp[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;] = validate(msg[&apos;MSH&apos;][&apos;messageControlId_value&apos;]+&apos;-&apos;+ DateUtil.getCurrentDate(&quot;HHmmss&quot;), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;MSH&apos;][&apos;messageControlId_value&apos;]+&apos;-&apos;+ DateUtil.getCurrentDate(&quot;HHmmss&quot;)</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>7</sequenceNumber>
            <name>SCH 2.1  - Appointment ID </name>
            <script>tmp[&apos;SCH&apos;][&apos;SCH.2&apos;][&apos;SCH.2.1&apos;] = validate(msg[&apos;STUDY&apos;][&apos;appointment_number&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;SCH&apos;][&apos;SCH.2&apos;][&apos;SCH.2.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;STUDY&apos;][&apos;appointment_number&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>8</sequenceNumber>
            <name>SCH 8.1 - Appointment type  -code examen du site client</name>
            <script>tmp[&apos;SCH&apos;][&apos;SCH.8&apos;][&apos;SCH.8.1&apos;] = validate(msg[&apos;STUDY&apos;][&apos;study_type_code&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;SCH&apos;][&apos;SCH.8&apos;][&apos;SCH.8.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;STUDY&apos;][&apos;study_type_code&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>9</sequenceNumber>
            <name>SCH 8.2 - Appoitment type - texte code examens site client</name>
            <script>tmp[&apos;SCH&apos;][&apos;SCH.8&apos;][&apos;SCH.8.2&apos;] = validate(msg[&apos;STUDY&apos;][&apos;study_type_text&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;SCH&apos;][&apos;SCH.8&apos;][&apos;SCH.8.2&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;STUDY&apos;][&apos;study_type_text&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>10</sequenceNumber>
            <name>SCH 8.3 - name of coding system -  groupe </name>
            <script>tmp[&apos;SCH&apos;][&apos;SCH.8&apos;][&apos;SCH.8.3&apos;] = validate(globalMap.get(&apos;CODE_GROUPE&apos;), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;SCH&apos;][&apos;SCH.8&apos;][&apos;SCH.8.3&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>globalMap.get(&apos;CODE_GROUPE&apos;)</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>11</sequenceNumber>
            <name>SCH 9.1 - Appointment duration</name>
            <script>tmp[&apos;SCH&apos;][&apos;SCH.9&apos;][&apos;SCH.9.1&apos;] = validate(msg[&apos;STUDY&apos;][&apos;duration&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;SCH&apos;][&apos;SCH.9&apos;][&apos;SCH.9.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;STUDY&apos;][&apos;duration&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>12</sequenceNumber>
            <name>SCH.11.4 -Appointment  Start date time</name>
            <script>tmp[&apos;SCH&apos;][&apos;SCH.11&apos;][&apos;SCH.11.4&apos;] = validate(DateUtil.convertDate( &apos;yyyy-MM-dd HH:mm:ss&apos;, &apos;yyyyMMddHHmm&apos;,msg[&apos;STUDY&apos;][&apos;scheduled_datetime&apos;]), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;SCH&apos;][&apos;SCH.11&apos;][&apos;SCH.11.4&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>DateUtil.convertDate( &apos;yyyy-MM-dd HH:mm:ss&apos;, &apos;yyyyMMddHHmm&apos;,msg[&apos;STUDY&apos;][&apos;scheduled_datetime&apos;])</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>13</sequenceNumber>
            <name>ID patient BEA </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.2&apos;][&apos;PID.2.1&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;bea_identifier&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.2&apos;][&apos;PID.2.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;bea_identifier&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>14</sequenceNumber>
            <name>Patient Identifier List - ID (PID.3.1) </name>
            <script>/*  ajout de l&apos;ID BEA  pour dEEPLINK  en première position */
/*tmp[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;] = msg[&apos;PATIENT&apos;][&apos;bea_identifier&apos;];
tmp[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.4&apos;] = &apos;BEA&apos;
tmp[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.5&apos;] = &apos;PI&apos;
*/

for (var i = 0; i &lt; msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;].length; i++) {
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][i][&apos;PID.3.1&apos;] = msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;][i][&apos;id&apos;];
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][i][&apos;PID.3.4&apos;] = msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;][i][&apos;assigning_authority_namespace_id&apos;];
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][i][&apos;PID.3.5&apos;] = msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;][i][&apos;type_code_id&apos;];
}</script>
            <type>JavaScript</type>
            <data>
              <entry>
                <string>Script</string>
                <string>/*  ajout de l&apos;ID BEA  pour dEEPLINK  en première position */
/*tmp[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;] = msg[&apos;PATIENT&apos;][&apos;bea_identifier&apos;];
tmp[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.4&apos;] = &apos;BEA&apos;
tmp[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.5&apos;] = &apos;PI&apos;
*/

for (var i = 0; i &lt; msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;].length; i++) {
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][i][&apos;PID.3.1&apos;] = msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;][i][&apos;id&apos;];
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][i][&apos;PID.3.4&apos;] = msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;][i][&apos;assigning_authority_namespace_id&apos;];
	tmp[&apos;PID&apos;][&apos;PID.3&apos;][i][&apos;PID.3.5&apos;] = msg[&apos;PATIENT&apos;][&apos;hl7_identifierList&apos;][i][&apos;type_code_id&apos;];
}</string>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>15</sequenceNumber>
            <name>Patient Name - Family Last Name (PID.5.1) </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.1&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;last_name&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;last_name&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>16</sequenceNumber>
            <name>Patient Name - Given Name (PID.5.2) </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.2&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;first_name&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.2&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;first_name&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>17</sequenceNumber>
            <name>Patient  Date/Time of Birth - Time of An Event (PID.7.1)  </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;] = validate(DateUtil.convertDate( &apos;yyyy-MM-dd&apos;, &apos;yyyyMMdd&apos;, msg[&apos;PATIENT&apos;][&apos;birthdate&apos;]), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>DateUtil.convertDate( &apos;yyyy-MM-dd&apos;, &apos;yyyyMMdd&apos;, msg[&apos;PATIENT&apos;][&apos;birthdate&apos;])</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>18</sequenceNumber>
            <name>Patient Sex - Value (PID.8.1)  </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.8&apos;][&apos;PID.8.1&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;sex&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.8&apos;][&apos;PID.8.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;sex&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>19</sequenceNumber>
            <name>Patient  Street Address (PID.11.1) </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.1&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;street_address&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;street_address&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>20</sequenceNumber>
            <name>Patient  City (PID.11.3) </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.3&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;city&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.3&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;city&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>21</sequenceNumber>
            <name>Patient  State or Province (PID.11.4)  </name>
            <script>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.4&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;state&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.4&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;state&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>22</sequenceNumber>
            <name>Patient_zip_code (PID.11.5)</name>
            <script>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.5&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;zip_code&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.5&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;zip_code&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>23</sequenceNumber>
            <name>Patient  Phone Number - Home   (PID.13.1)</name>
            <script>tmp[&apos;PID&apos;][&apos;PID.13&apos;][&apos;PID.13.1&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;private_phone_number&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.13&apos;][&apos;PID.13.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;private_phone_number&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>24</sequenceNumber>
            <name>Patient  Phone Number - Business - (PID.14.1)</name>
            <script>tmp[&apos;PID&apos;][&apos;PID.14&apos;][&apos;PID.14.1&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;business_phone_number&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.14&apos;][&apos;PID.14.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;business_phone_number&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>25</sequenceNumber>
            <name>Patient Mail (&apos;PID.13.4)</name>
            <script>tmp[&apos;PID&apos;][&apos;PID.13&apos;][&apos;PID.13.4&apos;] = validate(msg[&apos;PATIENT&apos;][&apos;mail&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.13&apos;][&apos;PID.13.4&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;PATIENT&apos;][&apos;mail&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>26</sequenceNumber>
            <name>Patient  NIR number (PID.19.1)</name>
            <script>tmp[&apos;PID&apos;][&apos;PID.19&apos;][&apos;PID.19.1&apos;] = validate(msg[&apos;INSURANCE&apos;][&apos;nir&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PID&apos;][&apos;PID.19&apos;][&apos;PID.19.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;INSURANCE&apos;][&apos;nir&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>27</sequenceNumber>
            <name>PV1 - prescribing doctor - RPPS code</name>
            <script>tmp[&apos;PV1&apos;][&apos;PV1.8&apos;][&apos;PV1.8.1&apos;] = validate(msg[&apos;STUDY&apos;][&apos;prescribing_doctor&apos;][&apos;rpps_number&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PV1&apos;][&apos;PV1.8&apos;][&apos;PV1.8.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;STUDY&apos;][&apos;prescribing_doctor&apos;][&apos;rpps_number&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>28</sequenceNumber>
            <name>PV1 - prescribing doctor - Last name</name>
            <script>tmp[&apos;PV1&apos;][&apos;PV1.8&apos;][&apos;PV1.8.2&apos;] = validate(msg[&apos;STUDY&apos;][&apos;prescribing_doctor&apos;][&apos;last_name&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PV1&apos;][&apos;PV1.8&apos;][&apos;PV1.8.2&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;STUDY&apos;][&apos;prescribing_doctor&apos;][&apos;last_name&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>29</sequenceNumber>
            <name>PV1 - prescribing doctor - First name</name>
            <script>tmp[&apos;PV1&apos;][&apos;PV1.8&apos;][&apos;PV1.8.3&apos;] = validate(msg[&apos;STUDY&apos;][&apos;prescribing_doctor&apos;][&apos;first_name&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;PV1&apos;][&apos;PV1.8&apos;][&apos;PV1.8.3&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;STUDY&apos;][&apos;prescribing_doctor&apos;][&apos;first_name&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>30</sequenceNumber>
            <name>AIS 3.1.1 .- code examen Deeplink Modality</name>
            <script>tmp[&apos;AIS&apos;][&apos;AIS.3&apos;][&apos;AIS.3.1&apos;][&apos;AIS.3.1.1&apos;] = validate($(&apos;modality_code&apos;), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;AIS&apos;][&apos;AIS.3&apos;][&apos;AIS.3.1&apos;][&apos;AIS.3.1.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>$(&apos;modality_code&apos;)</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>31</sequenceNumber>
            <name>AIS 3.1.2.- code examen Deeplink anatomic region</name>
            <script>tmp[&apos;AIS&apos;][&apos;AIS.3&apos;][&apos;AIS.3.1&apos;][&apos;AIS.3.1.2&apos;] = validate($(&apos;anatomic_region&apos;), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;AIS&apos;][&apos;AIS.3&apos;][&apos;AIS.3.1&apos;][&apos;AIS.3.1.2&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>$(&apos;anatomic_region&apos;)</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>32</sequenceNumber>
            <name>AIS.3.1. 3  - protocole</name>
            <script>tmp[&apos;AIS&apos;][&apos;AIS.3&apos;][&apos;AIS.3.1&apos;][&apos;AIS.3.1.3&apos;] = validate($(&apos;medical_protocol_code&apos;), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;AIS&apos;][&apos;AIS.3&apos;][&apos;AIS.3.1&apos;][&apos;AIS.3.1.3&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>$(&apos;medical_protocol_code&apos;)</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>33</sequenceNumber>
            <name>AIS.3.3 - name of coding system DEEPLINK</name>
            <script>tmp[&apos;AIS&apos;][&apos;AIS.3&apos;][&apos;AIS.3.3&apos;] = validate(&apos;DEEPLINK&apos;, &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;AIS&apos;][&apos;AIS.3&apos;][&apos;AIS.3.3&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>&apos;DEEPLINK&apos;</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>34</sequenceNumber>
            <name>AIL 6.1 - start date time </name>
            <script>tmp[&apos;AIL&apos;][&apos;AIL.6&apos;][&apos;AIL.6.1&apos;] = validate(DateUtil.convertDate( &apos;yyyy-MM-dd HH:mm:ss&apos;, &apos;yyyyMMddHHmm&apos;,msg[&apos;STUDY&apos;][&apos;scheduled_datetime&apos;]), &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;AIL&apos;][&apos;AIL.6&apos;][&apos;AIL.6.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>DateUtil.convertDate( &apos;yyyy-MM-dd HH:mm:ss&apos;, &apos;yyyyMMddHHmm&apos;,msg[&apos;STUDY&apos;][&apos;scheduled_datetime&apos;])</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>35</sequenceNumber>
            <name>AIL 9.1 - duration</name>
            <script>tmp[&apos;AIL&apos;][&apos;AIL.9&apos;][&apos;AIL.9.1&apos;] = validate(msg[&apos;STUDY&apos;][&apos;duration&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;AIL&apos;][&apos;AIL.9&apos;][&apos;AIL.9.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;STUDY&apos;][&apos;duration&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
          <step>
            <sequenceNumber>36</sequenceNumber>
            <name>AIL 3.1 - code vaccation</name>
            <script>tmp[&apos;AIL&apos;][&apos;AIL.3&apos;][&apos;AIL.3.1&apos;] = validate(msg[&apos;STUDY&apos;][&apos;shift_code&apos;], &apos;&apos;, new Array());</script>
            <type>Message Builder</type>
            <data>
              <entry>
                <string>Variable</string>
                <string>tmp[&apos;AIL&apos;][&apos;AIL.3&apos;][&apos;AIL.3.1&apos;]</string>
              </entry>
              <entry>
                <string>Mapping</string>
                <string>msg[&apos;STUDY&apos;][&apos;shift_code&apos;]</string>
              </entry>
              <entry>
                <string>DefaultValue</string>
                <string></string>
              </entry>
              <entry>
                <string>RegularExpressions</string>
                <list/>
              </entry>
            </data>
          </step>
        </steps>
        <inboundTemplate encoding="base64">ew0KICAiTVNIIiA6IHsNCiAgICAic2VuZGluZ0FwcGxpY2F0aW9uX25hbWVzcGFjZUlkIiA6ICJY
UExPUkUiLA0KICAgICJzZW5kaW5nRmFjaWxpdHlfbmFtZXNwYWNlSWQiIDogIlhQTE9SRSIsDQog
ICAgImRhdGVPclRpbWVPZk1lc3NhZ2VfdGltZU9mQW5FdmVudCIgOiAiMjAyMC0xMi0yOCAwNzo0
OTowMCIsDQogICAgIm1lc3NhZ2VUeXBlIiA6ICJTSVUiLA0KICAgICJtZXNzYWdlVHlwZV90cmln
Z2VyRXZlbnQiIDogIlMxMiIsDQogICAgIm1lc3NhZ2VDb250cm9sSWRfdmFsdWUiIDogIkExMDI3
MDU2ODUwMjA3NDg0MyIsDQogICAgImFjY2VwdEFja25vd2xlZGdtZW50VHlwZV92YWx1ZSIgOiAi
IiwNCiAgICAiYXBwbGljYXRpb25BY2tub3dsZWRnbWVudFR5cGVfdmFsdWUiIDogIiIsDQogICAg
InNlcXVlbmNlTnVtYmVyX3ZhbHVlIiA6IDAsDQogICAgImNvZGVTaXRlIiA6ICJDRUQiDQogIH0s
DQogICJQQVRJRU5UIiA6IHsNCiAgICAiYmVhX2lkZW50aWZpZXIiIDogIjEiLAogICAgImhsN19p
ZGVudGlmaWVyIiA6ICJYQzAwMDAwMjcxOTUiLA0KICAgICJobDdfaWRlbnRpZmllckxpc3QiIDog
Ww0KICAgICAgew0KICAgICAgICAiaWQiIDogIlhDMDAwMDAyNzE5NSIsDQogICAgICAgICJhc3Np
Z25pbmdfYXV0aG9yaXR5X25hbWVzcGFjZV9pZCIgOiAiRURMIiwNCiAgICAgICAgInR5cGVfY29k
ZV9pZCIgOiAiUEkiDQogICAgICB9DQogICAgXSwNCiAgICAibGFzdF9uYW1lIiA6ICJHVVlPTiIs
DQogICAgImZpcnN0X25hbWUiIDogIkpFQU4gTUlDSEVMIiwNCiAgICAiYmlydGhkYXRlIiA6ICIx
OTY1LTAzLTA5IiwNCiAgICAic2V4IiA6ICJNIiwNCiAgICAic3RyZWV0X2FkZHJlc3MiIDogIjMg
UlVFIFRSVUdVRVQgIiwNCiAgICAiY2l0eSIgOiAiVE9VTE9OIiwNCiAgICAic3RhdGUiIDogIiIs
DQogICAgInppcF9jb2RlIiA6ICI4MzAwMCIsDQogICAgInByaXZhdGVfcGhvbmVfbnVtYmVyIiA6
ICIiLA0KICAgICJidXNpbmVzc19waG9uZV9udW1iZXIiIDogIiIsDQogICAgIm1haWwiIDogIiIN
CiAgfSwNCiAgIk1FUkdFIiA6ICIiLA0KICAiVklTSVQiIDogew0KICAgICJ2aXNpdF9udW1iZXIi
IDogIkExMDI3MDU2ODUwMCIsDQogICAgImV4cGVjdGVkX2FkbWl0X2RhdGV0aW1lIiA6ICIyMDIw
LTEyLTI4IDA3OjQ5OjAwIg0KICB9LA0KICAiSU5TVVJBTkNFIiA6IHsNCiAgICAiaW5zdXJhbmNl
X3R5cGUiIDogIkFNTyIsDQogICAgIm5pciIgOiAiMTY1MDM5OTM0MTA4MjI3IiwNCiAgICAiYW1v
X2NvZGVfcmVnaW1lX2NhaXNzZV9jZW50cmUiIDogbnVsbCwNCiAgICAiYW1vX2Ryb2l0X2RlYnV0
IiA6IG51bGwsDQogICAgImFtb19kcm9pdF9maW4iIDogbnVsbA0KICB9LA0KICAiUkVGRVJSSU5H
X0RPQ1RPUiIgOiAiIiwNCiAgIlNUVURZIiA6CiAgICB7DQogICAgICAiYXBwb2ludG1lbnRfbnVt
YmVyIiA6ICJBMTAyNzA1Njg1MDAiLA0KICAgICAgImFjY2Vzc2lvbl9udW1iZXIiIDogIkExMDI3
MDU2ODUwMCIsDQogICAgICAiaW5zdGFuY2VfdWlkIiA6ICJBMTAyNzA1Njg1MDBfMCIsDQogICAg
ICAibG9jYXRpb25fY29kZSIgOiAiUkFEVVJDIiwNCiAgICAgICJsb2NhdGlvbl9sYWJlbCIgOiAi
UkFESU8gVVJHRU5DRVMgQ0VEUkVTIiwNCiAgICAgICJsb2NhdGlvbl90eXBlX2NvZGUiIDogIk5P
VF9VU0VEIiwNCiAgICAgICJsb2NhdGlvbl90aWNrZXRfbWVzc2FnZSIgOiBudWxsLA0KICAgICAg
ImxvY2F0aW9uX3BhcGVyX21lc3NhZ2UiIDogbnVsbCwNCiAgICAgICJzdHVkeV9zdGF0dXNfY29k
ZSIgOiAiU0NIRURVTEVEIiwNCiAgICAgICJzdHVkeV90eXBlX2NvZGUiIDogIlJBRFVSQ19SUE9V
TSIsDQogICAgICAic2hpZnRfY29kZSIgOiAiUkFEVVJDIiwNCiAgICAgICJzdHVkeV9hbHRlcm5h
dGl2ZV90eXBlX2NvZGUiIDogbnVsbCwNCiAgICAgICJzdHVkeV90eXBlX3RleHQiIDogIlBPVU1P
TlMgMTAiLA0KICAgICAgInNjaGVkdWxlZF9kYXRldGltZSIgOiAiMjAyMC0xMi0yOCAxMDoxMDow
MCIsDQogICAgICAibW9kYWxpdHlfY29kZSIgOiAiUkEiLA0KICAgICAgIm1vZGFsaXR5X3RleHQi
IDogIlJBRElPIFRIT1JBQ0lRVUUgLyBBU1AiLA0KICAgICAgIm9yaWdpbiIgOiAiR0VSSSIsDQog
ICAgICAiZHVyYXRpb24iIDogIjIwIiwNCiAgICAgICJwcmVzY3JpYmluZ19kb2N0b3IiIDogew0K
ICAgICAgICAicnBwc19udW1iZXIiIDogIjE5NTAxIiwNCiAgICAgICAgImxhc3RfbmFtZSIgOiAi
TEFQRVJUT1QiLA0KICAgICAgICAiZmlyc3RfbmFtZSIgOiAiTUFSVElORSINCiAgICAgIH0NCiAg
ICB9DQogLA0KICAiRE9DVU1FTlRTIiA6IFsgXQp9</inboundTemplate>
        <outboundTemplate encoding="base64">TVNIfF5+XCZ8fHx8fHx8U0lVXnx8UHwyLjMuMXx8fHx8fFVURi04fEZSClNDSHx8fHx8fHx8fHx8
fHx8fHx8fHx8fHxeXl58fHx8fA1QSUR8fHx8fF5eXl5eXkx8fHx8fHxeXl5efHxeXl58fHx8fHwK
UFYxfHx8fHx8fHxeXl5efHx8ClJHU3x8fApBSVN8fApBSUx8fAoKIA0=</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>HL7V2</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r\n</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r\n</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.4.2">
        <steps/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.4.2">
        <rules>
          <rule>
            <sequenceNumber>0</sequenceNumber>
            <name>Accept message if &quot;$(&apos;message_type&apos;)&quot; equals &apos;ORM&apos;</name>
            <data>
              <entry>
                <string>Field</string>
                <string>$(&apos;message_type&apos;)</string>
              </entry>
              <entry>
                <string>Name</string>
                <string></string>
              </entry>
              <entry>
                <string>OriginalField</string>
                <string></string>
              </entry>
              <entry>
                <string>Equals</string>
                <string>1</string>
              </entry>
              <entry>
                <string>Values</string>
                <list>
                  <string>&apos;ORM&apos;</string>
                </list>
              </entry>
            </data>
            <type>Rule Builder</type>
            <script>if($(&apos;message_type&apos;) == &apos;ORM&apos;) {
	return true;
}
return false;</script>
            <operator>NONE</operator>
          </rule>
          <rule>
            <sequenceNumber>1</sequenceNumber>
            <name>Accept message if &quot;$(&apos;response_translate_study_deeplink&apos;)&quot; equals &apos;found&apos;</name>
            <data>
              <entry>
                <string>Field</string>
                <string>$(&apos;response_translate_study_deeplink&apos;)</string>
              </entry>
              <entry>
                <string>Name</string>
                <string></string>
              </entry>
              <entry>
                <string>OriginalField</string>
                <string></string>
              </entry>
              <entry>
                <string>Equals</string>
                <string>1</string>
              </entry>
              <entry>
                <string>Values</string>
                <list>
                  <string>&apos;found&apos;</string>
                </list>
              </entry>
            </data>
            <type>Rule Builder</type>
            <script>if($(&apos;response_translate_study_deeplink&apos;) == &apos;found&apos;) {
	return true;
}
return false;</script>
            <operator>AND</operator>
          </rule>
        </rules>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.4.2">
      <metaDataId>6</metaDataId>
      <name>Envoi direct au serveur  Deeplink - SFTP (désactivé pour test et DEV) </name>
      <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
        <pluginProperties/>
        <destinationConnectorProperties version="3.4.2">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
        </destinationConnectorProperties>
        <scheme>SFTP</scheme>
        <schemeProperties class="com.mirth.connect.connectors.file.SftpSchemeProperties">
          <passwordAuth>false</passwordAuth>
          <keyAuth>true</keyAuth>
          <keyFile>C:\Users\Administrateur\.ssh\mirth.key</keyFile>
          <passPhrase></passPhrase>
          <hostKeyChecking>no</hostKeyChecking>
          <knownHostsFile></knownHostsFile>
          <configurationSettings class="linked-hash-map"/>
        </schemeProperties>
        <host>185.65.80.100:2222/wiis_test-in/todo</host>
        <outputPattern>${ftp_file_name_sent_to_deeplink}.hl7</outputPattern>
        <anonymous>false</anonymous>
        <username>wiis_test</username>
        <password></password>
        <timeout>10000</timeout>
        <secure>true</secure>
        <passive>true</passive>
        <validateConnection>true</validateConnection>
        <outputAppend>false</outputAppend>
        <errorOnExists>false</errorOnExists>
        <temporary>false</temporary>
        <binary>false</binary>
        <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
        <template>${message_to_send}</template>
      </properties>
      <transformer version="3.4.2">
        <steps>
          <step>
            <sequenceNumber>0</sequenceNumber>
            <name>deeplink_file_name</name>
            <script>//  construction du nom de fichier déposé sur le serveur fTP de deeplink 
var  code_groupe =  globalMap.get (&apos;CODE_GROUPE&apos;) ;
var  code_site   =  globalMap.get (&apos;CODE_SITE&apos;) ;



 
var ftp_file_name_sent_to_deeplink  = code_groupe+&apos;_&apos;+code_site+&apos;_&apos;+$(&apos;deeplink_file_message_type_event&apos;)+&apos;_&apos;+ msg[&apos;MSH&apos;][&apos;messageControlId_value&apos;]


channelMap.put(&apos;ftp_file_name_sent_to_deeplink&apos;, ftp_file_name_sent_to_deeplink)</script>
            <type>JavaScript</type>
            <data>
              <entry>
                <string>Script</string>
                <string>//  construction du nom de fichier déposé sur le serveur fTP de deeplink 
var  code_groupe =  globalMap.get (&apos;CODE_GROUPE&apos;) ;
var  code_site   =  globalMap.get (&apos;CODE_SITE&apos;) ;



 
var ftp_file_name_sent_to_deeplink  = code_groupe+&apos;_&apos;+code_site+&apos;_&apos;+$(&apos;deeplink_file_message_type_event&apos;)+&apos;_&apos;+ msg[&apos;MSH&apos;][&apos;messageControlId_value&apos;]


channelMap.put(&apos;ftp_file_name_sent_to_deeplink&apos;, ftp_file_name_sent_to_deeplink)</string>
              </entry>
            </data>
          </step>
        </steps>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.4.2">
        <steps/>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.4.2">
        <rules>
          <rule>
            <sequenceNumber>0</sequenceNumber>
            <name>Condition d&apos;envoi du message à Deeplink</name>
            <data>
              <entry>
                <string>Script</string>
                <string>//Condition d&apos;envoi du message à Deeplink s&apos;il est rempli ,uniquement et si les codes examens sont traduits

if  ($(&apos;message_to_send&apos;) &amp;&amp; $(&apos;message_to_send&apos;) !=&apos;&apos; ) { 
	if ( $(&apos;message_type&apos;) == &apos;ADT&apos;  ||
	    ( $(&apos;message_type&apos;) == &apos;SIU&apos; &amp;&amp;  $(&apos;response_translate_study_deeplink&apos;) ==&apos;found&apos; ) ) {
		return true;
	} 
} 

return false;</string>
              </entry>
            </data>
            <type>JavaScript</type>
            <script>//Condition d&apos;envoi du message à Deeplink s&apos;il est rempli ,uniquement et si les codes examens sont traduits

if  ($(&apos;message_to_send&apos;) &amp;&amp; $(&apos;message_to_send&apos;) !=&apos;&apos; ) { 
	if ( $(&apos;message_type&apos;) == &apos;ADT&apos;  ||
	    ( $(&apos;message_type&apos;) == &apos;SIU&apos; &amp;&amp;  $(&apos;response_translate_study_deeplink&apos;) ==&apos;found&apos; ) ) {
		return true;
	} 
} 

return false;</script>
            <operator>NONE</operator>
          </rule>
        </rules>
      </filter>
      <transportName>File Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.4.2">
      <metaDataId>11</metaDataId>
      <name>Envoi du fichier OK - confirmation d&apos;écriture fichier HL7 ( désactivé pour test et DEV) </name>
      <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
        <pluginProperties/>
        <destinationConnectorProperties version="3.4.2">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
        </destinationConnectorProperties>
        <scheme>SFTP</scheme>
        <schemeProperties class="com.mirth.connect.connectors.file.SftpSchemeProperties">
          <passwordAuth>false</passwordAuth>
          <keyAuth>true</keyAuth>
          <keyFile>C:\Users\Administrateur\.ssh\mirth.key</keyFile>
          <passPhrase></passPhrase>
          <hostKeyChecking>no</hostKeyChecking>
          <knownHostsFile></knownHostsFile>
          <configurationSettings class="linked-hash-map"/>
        </schemeProperties>
        <host>185.65.80.100:2222/wiis_test-in/todo</host>
        <outputPattern>${ftp_file_name_sent_to_deeplink}.ok</outputPattern>
        <anonymous>false</anonymous>
        <username>wiis_test</username>
        <password></password>
        <timeout>10000</timeout>
        <secure>true</secure>
        <passive>true</passive>
        <validateConnection>true</validateConnection>
        <outputAppend>false</outputAppend>
        <errorOnExists>false</errorOnExists>
        <temporary>false</temporary>
        <binary>false</binary>
        <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
        <template>OK</template>
      </properties>
      <transformer version="3.4.2">
        <steps/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.4.2">
        <steps/>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.4.2">
        <rules>
          <rule>
            <sequenceNumber>0</sequenceNumber>
            <name>Condition d&apos;envoi du message à Deeplink</name>
            <data>
              <entry>
                <string>Script</string>
                <string>// envoi d&apos;un fichier OK après que le fichier hl7 soit écrit sur le SFTP
// Condition d&apos;envoi du message à Deeplink s&apos;il est rempli ,uniquement et si les codes examens sont traduits

if  ($(&apos;message_to_send&apos;) &amp;&amp; $(&apos;message_to_send&apos;) !=&apos;&apos; ) { 
	if ( $(&apos;message_type&apos;) == &apos;ADT&apos;  ||
	    ( $(&apos;message_type&apos;) == &apos;SIU&apos; &amp;&amp;  $(&apos;response_translate_study_deeplink&apos;) ==&apos;found&apos; ) ) {
		return true;
	} 
} 

return false;</string>
              </entry>
            </data>
            <type>JavaScript</type>
            <script>// envoi d&apos;un fichier OK après que le fichier hl7 soit écrit sur le SFTP
// Condition d&apos;envoi du message à Deeplink s&apos;il est rempli ,uniquement et si les codes examens sont traduits

if  ($(&apos;message_to_send&apos;) &amp;&amp; $(&apos;message_to_send&apos;) !=&apos;&apos; ) { 
	if ( $(&apos;message_type&apos;) == &apos;ADT&apos;  ||
	    ( $(&apos;message_type&apos;) == &apos;SIU&apos; &amp;&amp;  $(&apos;response_translate_study_deeplink&apos;) ==&apos;found&apos; ) ) {
		return true;
	} 
} 

return false;</script>
            <operator>NONE</operator>
          </rule>
        </rules>
      </filter>
      <transportName>File Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>false</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.4.2">
      <metaDataId>16</metaDataId>
      <name>Mise à jour du mobility_status</name>
      <properties class="com.mirth.connect.connectors.jdbc.DatabaseDispatcherProperties" version="3.4.2">
        <pluginProperties/>
        <destinationConnectorProperties version="3.4.2">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
        </destinationConnectorProperties>
        <driver>com.mysql.jdbc.Driver</driver>
        <url>${database_url}</url>
        <username>${database_login}</username>
        <password>Dyn@mic69</password>
        <query>UPDATE study SET mobility_status = 1 WHERE accession_number = ${study_accession_number}</query>
        <useScript>false</useScript>
      </properties>
      <transformer version="3.4.2">
        <steps/>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.4.2">
        <steps/>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.4.2">
        <rules/>
      </filter>
      <transportName>Database Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
  </destinationConnectors>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map

var error_status = SENT;
var log_message = &apos;&apos; 
var error = false;

 
channelName = Packages.com.mirth.connect.server.controllers.ChannelController.getInstance().getDeployedChannelById(channelId).getName();

var destinationConnectors = Packages.com.mirth.connect.server.controllers.ChannelController.getInstance().getDeployedChannelByName(channelName).getEnabledDestinationConnectors().iterator();
var json_error = JSON.parse(getChannelError(destinationConnectors, channelName, responseMap, 3));
 
log_message = json_error.error_message;


if   (json_error.error) {
	error= true
	error_status=ERROR
	logToFile(&apos;ERROR&apos;, log_message)
}else{
     logToFile(&apos;INFO&apos;, log_message)
}

 

/*  
Uniquement pour les examens 
s&apos;il manque des traductions de code examen deeplink on envoi pas le message il passe a FAILED
*/

var  message_type = channelMap.get(&apos;message_type&apos;)

if  ( message_type == &apos;SIU&apos;  ){
     var  response_translate_study_deeplink = channelMap.get(&apos;response_translate_study_deeplink&apos;)

//  a faire  :  remplacer NOT found par 

 	if ( response_translate_study_deeplink ==&apos;NOT_FOUND&apos; )  {
		error= true
		error_status=ERROR
		log_message =&apos;Correspondance code examens deeplink non trouvée: &apos;+ $(&apos;study_type_code&apos;)	+&apos;\n&apos;+ &apos;Créer la codif dans la table TRANSLATE_DEEPLINK_STUDY_TYPE&apos;+&apos;\n&apos;+  &apos; pour relancer le routage du message, dans la table HL7_message_received --&gt; status à mettre RETRY_ROUTE_DEEPLINK&apos; 
	     logToFile(&apos;ERROR&apos;, log_message)
	}
}

 


return  Response( error_status,  JSON.stringify({&quot;error&quot;: error, &quot;error_message&quot;: log_message}   )  )  ; 
				

</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
  <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
  <properties version="3.4.2">
    <clearGlobalChannelMap>true</clearGlobalChannelMap>
    <messageStorageMode>PRODUCTION</messageStorageMode>
    <encryptData>false</encryptData>
    <removeContentOnCompletion>false</removeContentOnCompletion>
    <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
    <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
    <initialState>STARTED</initialState>
    <storeAttachments>false</storeAttachments>
    <tags class="linked-hash-set"/>
    <metaDataColumns>
      <metaDataColumn>
        <name>SOURCE</name>
        <type>STRING</type>
        <mappingName>mirth_source</mappingName>
      </metaDataColumn>
      <metaDataColumn>
        <name>TYPE</name>
        <type>STRING</type>
        <mappingName>mirth_type</mappingName>
      </metaDataColumn>
    </metaDataColumns>
    <attachmentProperties version="3.4.2">
      <type>None</type>
      <properties/>
    </attachmentProperties>
    <pruneMetaDataDays>7</pruneMetaDataDays>
    <archiveEnabled>false</archiveEnabled>
    <resourceIds class="linked-hash-map">
      <entry>
        <string>Default Resource</string>
        <string>[Default Resource]</string>
      </entry>
    </resourceIds>
  </properties>
  <codeTemplateLibraries/>
</channel>