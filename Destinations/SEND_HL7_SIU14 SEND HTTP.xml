<connector version="3.4.2">
  <metaDataId>19</metaDataId>
  <name>SEND HTTP</name>
  <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.4.2">
    <pluginProperties/>
    <destinationConnectorProperties version="3.4.2">
      <queueEnabled>false</queueEnabled>
      <sendFirst>false</sendFirst>
      <retryIntervalMillis>10000</retryIntervalMillis>
      <regenerateTemplate>false</regenerateTemplate>
      <retryCount>0</retryCount>
      <rotate>false</rotate>
      <includeFilterTransformer>false</includeFilterTransformer>
      <threadCount>1</threadCount>
      <threadAssignmentVariable></threadAssignmentVariable>
      <validateResponse>false</validateResponse>
      <resourceIds class="linked-hash-map">
        <entry>
          <string>Default Resource</string>
          <string>[Default Resource]</string>
        </entry>
      </resourceIds>
      <queueBufferSize>1000</queueBufferSize>
    </destinationConnectorProperties>
    <host>http://localhost/beacore/wedaDocuments/postSendSIUS14</host>
    <useProxyServer>false</useProxyServer>
    <proxyAddress></proxyAddress>
    <proxyPort></proxyPort>
    <method>post</method>
    <headers class="linked-hash-map">
      <entry>
        <string>Authorization</string>
        <list>
          <string>Bearer ${accessToken}</string>
        </list>
      </entry>
    </headers>
    <parameters class="linked-hash-map"/>
    <responseXmlBody>false</responseXmlBody>
    <responseParseMultipart>true</responseParseMultipart>
    <responseIncludeMetadata>false</responseIncludeMetadata>
    <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
    <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
    <multipart>false</multipart>
    <useAuthentication>false</useAuthentication>
    <authenticationType>Basic</authenticationType>
    <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
    <username></username>
    <password></password>
    <content>{
	&quot;message&quot; : &quot;${hl7_message_send_message}&quot;
}</content>
    <contentType>json/application</contentType>
    <dataTypeBinary>false</dataTypeBinary>
    <charset>UTF-8</charset>
    <socketTimeout>30000</socketTimeout>
  </properties>
  <transformer version="3.4.2">
    <steps>
      <step>
        <sequenceNumber>0</sequenceNumber>
        <name>New Step</name>
        <script>var hl7_message_send_message = $(&apos;hl7_message_send_message&apos;).replaceAll(&quot;\\\\&quot;, &quot;\\\\\\\\&quot;);

channelMap.put(&apos;hl7_message_send_message&apos;, validate( hl7_message_send_message , &apos;&apos;, new Array()));</script>
        <type>JavaScript</type>
        <data>
          <entry>
            <string>Script</string>
            <string>var hl7_message_send_message = $(&apos;hl7_message_send_message&apos;).replaceAll(&quot;\\\\&quot;, &quot;\\\\\\\\&quot;);

channelMap.put(&apos;hl7_message_send_message&apos;, validate( hl7_message_send_message , &apos;&apos;, new Array()));</string>
          </entry>
        </data>
      </step>
    </steps>
    <inboundTemplate encoding="base64"></inboundTemplate>
    <outboundTemplate encoding="base64"></outboundTemplate>
    <inboundDataType>XML</inboundDataType>
    <outboundDataType>XML</outboundDataType>
    <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.4.2">
      <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.4.2">
        <stripNamespaces>true</stripNamespaces>
      </serializationProperties>
      <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.4.2">
        <splitType>Element_Name</splitType>
        <elementName></elementName>
        <level>1</level>
        <query></query>
        <batchScript></batchScript>
      </batchProperties>
    </inboundProperties>
    <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.4.2">
      <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.4.2">
        <stripNamespaces>true</stripNamespaces>
      </serializationProperties>
      <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.4.2">
        <splitType>Element_Name</splitType>
        <elementName></elementName>
        <level>1</level>
        <query></query>
        <batchScript></batchScript>
      </batchProperties>
    </outboundProperties>
  </transformer>
  <responseTransformer version="3.4.2">
    <steps>
      <step>
        <sequenceNumber>0</sequenceNumber>
        <name>sequence_number</name>
        <script>var mapping;

try {
	mapping = msg[&apos;MSH&apos;][&apos;MSH.13&apos;][&apos;MSH.13.1&apos;].toString(); 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;sequence_number&apos;, validate( mapping , 0, new Array()));</script>
        <type>Mapper</type>
        <data>
          <entry>
            <string>Variable</string>
            <string>sequence_number</string>
          </entry>
          <entry>
            <string>Mapping</string>
            <string>msg[&apos;MSH&apos;][&apos;MSH.13&apos;][&apos;MSH.13.1&apos;].toString()</string>
          </entry>
          <entry>
            <string>DefaultValue</string>
            <string>0</string>
          </entry>
          <entry>
            <string>RegularExpressions</string>
            <list/>
          </entry>
          <entry>
            <string>isGlobal</string>
            <string>channel</string>
          </entry>
        </data>
      </step>
      <step>
        <sequenceNumber>1</sequenceNumber>
        <name>Check ACK</name>
        <script>var ackStatus = msg[&apos;MSA&apos;][&apos;MSA.1&apos;][&apos;MSA.1.1&apos;].toString();
var messageControlId = msg[&apos;MSA&apos;][&apos;MSA.2&apos;][&apos;MSA.2.1&apos;].toString();
var status = null;

logToFile(&apos;ACK received: &apos; + ackStatus, &apos;DEBUG&apos;);
switch(ackStatus) {
	case &apos;AA&apos;:
	case &apos;CA&apos;:
		status = &apos;DONE&apos;;
		break;
	case &apos;AE&apos;:
	case &apos;AR&apos;:	
	case &apos;CE&apos;:
	case &apos;CR&apos;:	
	default:
		status = &apos;FAILED&apos;;
		break;
}

var dbConn;
var result;
try {
	dbConn = getDBConnection();	
	result = dbConn.executeUpdate(&apos;UPDATE hl7_message_send SET status = ? WHERE control_id = ?&apos;, [status, messageControlId]);
		var query = &apos;INSERT INTO hl7_message_received (\
			sending_application, \
			sending_facility, \
			message_datetime, \
			message_type, \
			control_id, \
			sequence_number, \
			accept_acknowledgment_type, \
			application_acknowledgment_type, \
			message\
		) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?)&apos;;
		var params = [
			msg[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.1&apos;].toString(),
			msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString(),
			dateParser(msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString()),
			msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.1&apos;].toString(),
			msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString(),
			$(&apos;sequence_number&apos;),			
			msg[&apos;MSH&apos;][&apos;MSH.15&apos;][&apos;MSH.15.1&apos;].toString(),
			msg[&apos;MSH&apos;][&apos;MSH.16&apos;][&apos;MSH.16.1&apos;].toString(),
			response.getMessage()
		]
		logToFile(query + &apos;:&apos; + params, &apos;DEBUG&apos;)
		dbConn.executeUpdate(query, params);	
} catch(ex){
	var message = ex.message + &apos; &apos; + connectorMessage.getResponseData();
	logToFile(message)
}finally {
	if (dbConn) {
		dbConn.close();
	}	
}
return status</script>
        <type>JavaScript</type>
        <data>
          <entry>
            <string>Script</string>
            <string>var ackStatus = msg[&apos;MSA&apos;][&apos;MSA.1&apos;][&apos;MSA.1.1&apos;].toString();
var messageControlId = msg[&apos;MSA&apos;][&apos;MSA.2&apos;][&apos;MSA.2.1&apos;].toString();
var status = null;

logToFile(&apos;ACK received: &apos; + ackStatus, &apos;DEBUG&apos;);
switch(ackStatus) {
	case &apos;AA&apos;:
	case &apos;CA&apos;:
		status = &apos;DONE&apos;;
		break;
	case &apos;AE&apos;:
	case &apos;AR&apos;:	
	case &apos;CE&apos;:
	case &apos;CR&apos;:	
	default:
		status = &apos;FAILED&apos;;
		break;
}

var dbConn;
var result;
try {
	dbConn = getDBConnection();	
	result = dbConn.executeUpdate(&apos;UPDATE hl7_message_send SET status = ? WHERE control_id = ?&apos;, [status, messageControlId]);
		var query = &apos;INSERT INTO hl7_message_received (\
			sending_application, \
			sending_facility, \
			message_datetime, \
			message_type, \
			control_id, \
			sequence_number, \
			accept_acknowledgment_type, \
			application_acknowledgment_type, \
			message\
		) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?)&apos;;
		var params = [
			msg[&apos;MSH&apos;][&apos;MSH.3&apos;][&apos;MSH.3.1&apos;].toString(),
			msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString(),
			dateParser(msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString()),
			msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.1&apos;].toString(),
			msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString(),
			$(&apos;sequence_number&apos;),			
			msg[&apos;MSH&apos;][&apos;MSH.15&apos;][&apos;MSH.15.1&apos;].toString(),
			msg[&apos;MSH&apos;][&apos;MSH.16&apos;][&apos;MSH.16.1&apos;].toString(),
			response.getMessage()
		]
		logToFile(query + &apos;:&apos; + params, &apos;DEBUG&apos;)
		dbConn.executeUpdate(query, params);	
} catch(ex){
	var message = ex.message + &apos; &apos; + connectorMessage.getResponseData();
	logToFile(message)
}finally {
	if (dbConn) {
		dbConn.close();
	}	
}
return status</string>
          </entry>
        </data>
      </step>
    </steps>
    <inboundTemplate encoding="base64">TVNIfF5+XCZ8TkVIU3xHWEQ1UklTfEJFQXxXSUlTfDIwMjMwNTI1MDkzOTU1LjIwMnx8QUNLfDIw
MjMwNTI1MDkzOTU1LjIwMnxQfDIuMy4xDU1TQXxBQXwyMDIzMDUyNTA5Mzk1NA==</inboundTemplate>
    <outboundTemplate encoding="base64"></outboundTemplate>
    <inboundDataType>HL7V2</inboundDataType>
    <outboundDataType>XML</outboundDataType>
    <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
      <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
        <handleRepetitions>true</handleRepetitions>
        <handleSubcomponents>true</handleSubcomponents>
        <useStrictParser>false</useStrictParser>
        <useStrictValidation>false</useStrictValidation>
        <stripNamespaces>true</stripNamespaces>
        <segmentDelimiter>\r</segmentDelimiter>
        <convertLineBreaks>true</convertLineBreaks>
      </serializationProperties>
      <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
        <useStrictParser>false</useStrictParser>
        <useStrictValidation>false</useStrictValidation>
        <segmentDelimiter>\r</segmentDelimiter>
      </deserializationProperties>
      <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
        <splitType>MSH_Segment</splitType>
        <batchScript></batchScript>
      </batchProperties>
      <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
        <segmentDelimiter>\r</segmentDelimiter>
        <successfulACKCode>AA</successfulACKCode>
        <successfulACKMessage></successfulACKMessage>
        <errorACKCode>AE</errorACKCode>
        <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
        <rejectedACKCode>AR</rejectedACKCode>
        <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
        <msh15ACKAccept>false</msh15ACKAccept>
        <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
      </responseGenerationProperties>
      <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
        <successfulACKCode>AA,CA</successfulACKCode>
        <errorACKCode>AE,CE</errorACKCode>
        <rejectedACKCode>AR,CR</rejectedACKCode>
        <validateMessageControlId>true</validateMessageControlId>
        <originalMessageControlId>Destination_Encoded</originalMessageControlId>
        <originalIdMapVariable></originalIdMapVariable>
      </responseValidationProperties>
    </inboundProperties>
    <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.4.2">
      <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.4.2">
        <stripNamespaces>true</stripNamespaces>
      </serializationProperties>
      <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.4.2">
        <splitType>Element_Name</splitType>
        <elementName></elementName>
        <level>1</level>
        <query></query>
        <batchScript></batchScript>
      </batchProperties>
    </outboundProperties>
  </responseTransformer>
  <filter version="3.4.2">
    <rules>
      <rule>
        <sequenceNumber>0</sequenceNumber>
        <name>TEST transport_mode == mllp</name>
        <data>
          <entry>
            <string>Script</string>
            <string>if($(&apos;transport_mode&apos;) &amp;&amp; $(&apos;transport_mode&apos;) == &apos;http&apos;) {
	return true;
}

return false;</string>
          </entry>
        </data>
        <type>JavaScript</type>
        <script>if($(&apos;transport_mode&apos;) &amp;&amp; $(&apos;transport_mode&apos;) == &apos;http&apos;) {
	return true;
}

return false;</script>
        <operator>NONE</operator>
      </rule>
      <rule>
        <sequenceNumber>1</sequenceNumber>
        <name>Accept message if &quot;$(&apos;hl7_message_send_message&apos;)&quot; is not blank</name>
        <data>
          <entry>
            <string>Field</string>
            <string>$(&apos;hl7_message_send_message&apos;)</string>
          </entry>
          <entry>
            <string>Name</string>
            <string></string>
          </entry>
          <entry>
            <string>OriginalField</string>
            <string></string>
          </entry>
          <entry>
            <string>Equals</string>
            <string>0</string>
          </entry>
          <entry>
            <string>Values</string>
            <list/>
          </entry>
        </data>
        <type>Rule Builder</type>
        <script>if($(&apos;hl7_message_send_message&apos;) != &quot;&quot;) {
	return true;
}
return false;</script>
        <operator>AND</operator>
      </rule>
    </rules>
  </filter>
  <transportName>HTTP Sender</transportName>
  <mode>DESTINATION</mode>
  <enabled>true</enabled>
  <waitForPrevious>true</waitForPrevious>
</connector>